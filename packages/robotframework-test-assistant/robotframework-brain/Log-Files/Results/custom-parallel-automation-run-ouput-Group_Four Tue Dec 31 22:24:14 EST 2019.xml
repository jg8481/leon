<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 3.1.2 (Python 3.7.5 on darwin)" generated="20191231 22:27:59.251" rpa="false">
<suite id="s1" name="Leon Robot Framework Assistant Combined Results Dashboard">
<suite id="s1-s1" name="Group_One Tue Dec 31 22:24:12 EST 2019">
<suite id="s1-s1-s1" name="Leon-Robot-Framework-Customizable-Parallel-Runner1" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner1.robot">
<test id="s1-s1-s1-t1" name="AUTOMATED CHECK 1 - PARALLEL RUNNER 1 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 22:24:13.180" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 22:24:13.180" endtime="20191231 22:24:13.180"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 1 - A hypothetical automated check - PARALLEL RUNNER 1</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 22:24:13.182" level="INFO">Starting process:
echo "AUTOMATED CHECK 1 - A hypothetical automated check - PARALLEL RUNNER 1 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 22:24:13.186" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 22:24:13.387" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 22:24:13.181" endtime="20191231 22:24:13.387"></status>
</kw>
<status status="PASS" starttime="20191231 22:24:13.181" endtime="20191231 22:24:13.387"></status>
</kw>
<tags>
<tag>Group_One</tag>
</tags>
<status status="PASS" starttime="20191231 22:24:13.179" endtime="20191231 22:24:13.388" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 22:24:13.163" endtime="20191231 22:24:13.388"></status>
</suite>
<suite id="s1-s1-s2" name="Leon-Robot-Framework-Customizable-Parallel-Runner2" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner2.robot">
<test id="s1-s1-s2-t1" name="AUTOMATED CHECK 1 - PARALLEL RUNNER 2 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 22:24:13.180" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 22:24:13.179" endtime="20191231 22:24:13.180"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 1 - A hypothetical automated check - PARALLEL RUNNER 2</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 22:24:13.181" level="INFO">Starting process:
echo "AUTOMATED CHECK 1 - A hypothetical automated check - PARALLEL RUNNER 2 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 22:24:13.186" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 22:24:13.387" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 22:24:13.181" endtime="20191231 22:24:13.387"></status>
</kw>
<status status="PASS" starttime="20191231 22:24:13.180" endtime="20191231 22:24:13.387"></status>
</kw>
<tags>
<tag>Group_One</tag>
</tags>
<status status="PASS" starttime="20191231 22:24:13.179" endtime="20191231 22:24:13.388" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 22:24:13.163" endtime="20191231 22:24:13.388"></status>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 2 executions.</doc>
<status status="PASS" starttime="20191231 22:24:13.140" endtime="20191231 22:24:13.389"></status>
</suite>
<suite id="s1-s2" name="Group_Three Tue Dec 31 22:24:15 EST 2019">
<suite id="s1-s2-s1" name="Leon-Robot-Framework-Customizable-Parallel-Runner1" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner1.robot">
<test id="s1-s2-s1-t1" name="AUTOMATED CHECK 3 - PARALLEL RUNNER 1 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 22:24:16.703" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 22:24:16.702" endtime="20191231 22:24:16.703"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 3 - A hypothetical automated check - PARALLEL RUNNER 1</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 22:24:16.704" level="INFO">Starting process:
echo "AUTOMATED CHECK 3 - A hypothetical automated check - PARALLEL RUNNER 1 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 22:24:16.708" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 22:24:16.913" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 22:24:16.703" endtime="20191231 22:24:16.913"></status>
</kw>
<status status="PASS" starttime="20191231 22:24:16.703" endtime="20191231 22:24:16.914"></status>
</kw>
<tags>
<tag>Group_Three</tag>
</tags>
<status status="PASS" starttime="20191231 22:24:16.702" endtime="20191231 22:24:16.914" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 22:24:16.686" endtime="20191231 22:24:16.915"></status>
</suite>
<suite id="s1-s2-s2" name="Leon-Robot-Framework-Customizable-Parallel-Runner2" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner2.robot">
<test id="s1-s2-s2-t1" name="AUTOMATED CHECK 3 - PARALLEL RUNNER 2 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 22:24:16.703" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 22:24:16.703" endtime="20191231 22:24:16.703"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 3 - A hypothetical automated check - PARALLEL RUNNER 2</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 22:24:16.704" level="INFO">Starting process:
echo "AUTOMATED CHECK 3 - A hypothetical automated check - PARALLEL RUNNER 2 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 22:24:16.708" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 22:24:16.913" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 22:24:16.703" endtime="20191231 22:24:16.913"></status>
</kw>
<status status="PASS" starttime="20191231 22:24:16.703" endtime="20191231 22:24:16.914"></status>
</kw>
<tags>
<tag>Group_Three</tag>
</tags>
<status status="PASS" starttime="20191231 22:24:16.702" endtime="20191231 22:24:16.914" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 22:24:16.686" endtime="20191231 22:24:16.915"></status>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 2 executions.</doc>
<status status="PASS" starttime="20191231 22:24:16.662" endtime="20191231 22:24:16.916"></status>
</suite>
<suite id="s1-s3" name="Group_Two Tue Dec 31 22:24:10 EST 2019">
<suite id="s1-s3-s1" name="Leon-Robot-Framework-Customizable-Parallel-Runner1" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner1.robot">
<test id="s1-s3-s1-t1" name="AUTOMATED CHECK 2 - PARALLEL RUNNER 1 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 22:24:11.421" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 22:24:11.421" endtime="20191231 22:24:11.421"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 2 - A hypothetical automated check - PARALLEL RUNNER 1</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 22:24:11.423" level="INFO">Starting process:
echo "AUTOMATED CHECK 2 - A hypothetical automated check - PARALLEL RUNNER 1 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 22:24:11.427" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 22:24:11.634" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 22:24:11.422" endtime="20191231 22:24:11.634"></status>
</kw>
<status status="PASS" starttime="20191231 22:24:11.421" endtime="20191231 22:24:11.635"></status>
</kw>
<tags>
<tag>Group_Two</tag>
</tags>
<status status="PASS" starttime="20191231 22:24:11.420" endtime="20191231 22:24:11.635" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 22:24:11.405" endtime="20191231 22:24:11.635"></status>
</suite>
<suite id="s1-s3-s2" name="Leon-Robot-Framework-Customizable-Parallel-Runner2" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner2.robot">
<test id="s1-s3-s2-t1" name="AUTOMATED CHECK 2 - PARALLEL RUNNER 2 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 22:24:11.417" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 22:24:11.417" endtime="20191231 22:24:11.417"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 2 - A hypothetical automated check - PARALLEL RUNNER 2</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 22:24:11.418" level="INFO">Starting process:
echo "AUTOMATED CHECK 2 - A hypothetical automated check - PARALLEL RUNNER 2 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 22:24:11.422" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 22:24:11.629" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 22:24:11.417" endtime="20191231 22:24:11.630"></status>
</kw>
<status status="PASS" starttime="20191231 22:24:11.417" endtime="20191231 22:24:11.630"></status>
</kw>
<tags>
<tag>Group_Two</tag>
</tags>
<status status="PASS" starttime="20191231 22:24:11.416" endtime="20191231 22:24:11.630" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 22:24:11.402" endtime="20191231 22:24:11.631"></status>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 2 executions.</doc>
<status status="PASS" starttime="20191231 22:24:11.381" endtime="20191231 22:24:11.636"></status>
</suite>
<suite id="s1-s4" name="Robot Framework automation run in a manually constructed sequence set up through leon-ai with a CustomSerialAutomationRunnerFile.csv file">
<suite id="s1-s4-s1" name="Check_One Tue Dec 31 22:23:31 EST 2019" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s4-s1-t1" name="AUTOMATED CHECK 1 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 22:23:31.687" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 22:23:31.687" endtime="20191231 22:23:31.687"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 1 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 22:23:31.688" level="INFO">Starting process:
echo "AUTOMATED CHECK 1 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 22:23:31.692" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 22:23:31.898" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 22:23:31.688" endtime="20191231 22:23:31.898"></status>
</kw>
<status status="PASS" starttime="20191231 22:23:31.687" endtime="20191231 22:23:31.898"></status>
</kw>
<tags>
<tag>Check_One</tag>
</tags>
<status status="PASS" starttime="20191231 22:23:31.686" endtime="20191231 22:23:31.899" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 22:23:31.648" endtime="20191231 22:23:31.899"></status>
</suite>
<suite id="s1-s4-s2" name="Check_Three Tue Dec 31 22:23:26 EST 2019" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s4-s2-t1" name="AUTOMATED CHECK 3 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 22:23:26.937" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 22:23:26.937" endtime="20191231 22:23:26.937"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 3 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 22:23:26.938" level="INFO">Starting process:
echo "AUTOMATED CHECK 3 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 22:23:26.942" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 22:23:28.680" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 22:23:26.938" endtime="20191231 22:23:28.681"></status>
</kw>
<status status="PASS" starttime="20191231 22:23:26.937" endtime="20191231 22:23:28.681"></status>
</kw>
<tags>
<tag>Check_Three</tag>
</tags>
<status status="PASS" starttime="20191231 22:23:26.937" endtime="20191231 22:23:28.681" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 22:23:26.901" endtime="20191231 22:23:28.682"></status>
</suite>
<suite id="s1-s4-s3" name="Check_Two Tue Dec 31 22:23:29 EST 2019" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s4-s3-t1" name="AUTOMATED CHECK 2 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 22:23:29.541" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 22:23:29.541" endtime="20191231 22:23:29.542"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 2 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 22:23:29.542" level="INFO">Starting process:
echo "AUTOMATED CHECK 2 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 22:23:29.546" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 22:23:29.753" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 22:23:29.542" endtime="20191231 22:23:29.753"></status>
</kw>
<status status="PASS" starttime="20191231 22:23:29.542" endtime="20191231 22:23:29.754"></status>
</kw>
<tags>
<tag>Check_Two</tag>
</tags>
<status status="PASS" starttime="20191231 22:23:29.541" endtime="20191231 22:23:29.754" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 22:23:29.503" endtime="20191231 22:23:29.755"></status>
</suite>
<suite id="s1-s4-s4" name="Start Tue Dec 31 22:23:25 EST 2019" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s4-s4-t1" name="CUSTOM RUNNER START : This helps avoid skipping the first actual automated check in the runner file.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This runs first.</arg>
</arguments>
<msg timestamp="20191231 22:23:26.071" level="INFO">This runs first.</msg>
<status status="PASS" starttime="20191231 22:23:26.071" endtime="20191231 22:23:26.071"></status>
</kw>
<tags>
<tag>Start</tag>
</tags>
<status status="PASS" starttime="20191231 22:23:26.070" endtime="20191231 22:23:26.071" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 22:23:26.027" endtime="20191231 22:23:26.071"></status>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="2328"></status>
</suite>
<suite id="s1-s5" name="Check_One Tue Dec 31 22:23:31 EST 2019" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s5-t1" name="AUTOMATED CHECK 1 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 22:23:31.687" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 22:23:31.687" endtime="20191231 22:23:31.687"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 1 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 22:23:31.688" level="INFO">Starting process:
echo "AUTOMATED CHECK 1 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 22:23:31.692" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 22:23:31.898" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 22:23:31.688" endtime="20191231 22:23:31.898"></status>
</kw>
<status status="PASS" starttime="20191231 22:23:31.687" endtime="20191231 22:23:31.898"></status>
</kw>
<tags>
<tag>Check_One</tag>
</tags>
<status status="PASS" starttime="20191231 22:23:31.686" endtime="20191231 22:23:31.899" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 22:23:31.648" endtime="20191231 22:23:31.899"></status>
</suite>
<suite id="s1-s6" name="Check_Three Tue Dec 31 22:23:26 EST 2019" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s6-t1" name="AUTOMATED CHECK 3 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 22:23:26.937" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 22:23:26.937" endtime="20191231 22:23:26.937"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 3 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 22:23:26.938" level="INFO">Starting process:
echo "AUTOMATED CHECK 3 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 22:23:26.942" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 22:23:28.680" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 22:23:26.938" endtime="20191231 22:23:28.681"></status>
</kw>
<status status="PASS" starttime="20191231 22:23:26.937" endtime="20191231 22:23:28.681"></status>
</kw>
<tags>
<tag>Check_Three</tag>
</tags>
<status status="PASS" starttime="20191231 22:23:26.937" endtime="20191231 22:23:28.681" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 22:23:26.901" endtime="20191231 22:23:28.682"></status>
</suite>
<suite id="s1-s7" name="Check_Two Tue Dec 31 22:23:29 EST 2019" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s7-t1" name="AUTOMATED CHECK 2 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 22:23:29.541" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 22:23:29.541" endtime="20191231 22:23:29.542"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 2 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 22:23:29.542" level="INFO">Starting process:
echo "AUTOMATED CHECK 2 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 22:23:29.546" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 22:23:29.753" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 22:23:29.542" endtime="20191231 22:23:29.753"></status>
</kw>
<status status="PASS" starttime="20191231 22:23:29.542" endtime="20191231 22:23:29.754"></status>
</kw>
<tags>
<tag>Check_Two</tag>
</tags>
<status status="PASS" starttime="20191231 22:23:29.541" endtime="20191231 22:23:29.754" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 22:23:29.503" endtime="20191231 22:23:29.755"></status>
</suite>
<suite id="s1-s8" name="Robot Framework Desktop Web Browser Test Run">
<suite id="s1-s8-s1" name="Desktop-Example-Chrome" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Tests/Workshop-Part-Two/Desktop-Example-Chrome.robot">
<kw name="Open Chrome Browser To Specified URL" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20191231 22:23:43.736" level="INFO">Opening browser 'Chrome' to base url 'https://owasp-goat-app.herokuapp.com/login'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20191231 22:23:43.757" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<status status="PASS" starttime="20191231 22:23:43.756" endtime="20191231 22:23:43.757"></status>
</kw>
<msg timestamp="20191231 22:23:43.761" level="FAIL">WebDriverException: Message: 'chromedriver' executable may have wrong permissions. Please see https://sites.google.com/a/chromium.org/chromedriver/home
</msg>
<status status="FAIL" starttime="20191231 22:23:43.736" endtime="20191231 22:23:43.761"></status>
</kw>
<status status="FAIL" starttime="20191231 22:23:43.735" endtime="20191231 22:23:43.761"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="teardown">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20191231 22:23:43.764" endtime="20191231 22:23:43.764"></status>
</kw>
<test id="s1-s8-s1-t1" name="Go to the sign up page from the login page.">
<tags>
<tag>Desktop Chrome</tag>
</tags>
<status status="FAIL" starttime="20191231 22:23:43.761" endtime="20191231 22:23:43.762" critical="yes">Parent suite setup failed:
WebDriverException: Message: 'chromedriver' executable may have wrong permissions. Please see https://sites.google.com/a/chromium.org/chromedriver/home
</status>
</test>
<test id="s1-s8-s1-t2" name="Quickly check that the sign up page loaded.">
<tags>
<tag>Desktop Chrome</tag>
</tags>
<status status="FAIL" starttime="20191231 22:23:43.762" endtime="20191231 22:23:43.763" critical="yes">Parent suite setup failed:
WebDriverException: Message: 'chromedriver' executable may have wrong permissions. Please see https://sites.google.com/a/chromium.org/chromedriver/home
</status>
</test>
<doc>Simple example using SeleniumLibrary.</doc>
<status status="FAIL" starttime="20191231 22:23:43.552" endtime="20191231 22:23:43.764">Suite setup failed:
WebDriverException: Message: 'chromedriver' executable may have wrong permissions. Please see https://sites.google.com/a/chromium.org/chromedriver/home
</status>
</suite>
<suite id="s1-s8-s2" name="Desktop-Example-Firefox" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Tests/Workshop-Part-Two/Desktop-Example-Firefox.robot">
<kw name="Open Firefox Browser To Specified URL" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20191231 22:23:43.736" level="INFO">Opening browser 'Firefox' to base url 'https://owasp-goat-app.herokuapp.com/login'.</msg>
<msg timestamp="20191231 22:23:43.737" level="INFO">Firefox driver log is always forced to to: /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Workshop-Part-Three/pabot_results/Robot Framework Desktop Web Browser Test Run.Desktop-Example-Firefox/geckodriver-1.log</msg>
<status status="PASS" starttime="20191231 22:23:43.736" endtime="20191231 22:23:47.873"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20191231 22:23:47.873" endtime="20191231 22:23:47.876"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>${RETRY_AMOUNT}x</arg>
<arg>0.1s</arg>
<arg>Wait Until Page Contains</arg>
<arg>Password</arg>
<arg>0.5s</arg>
</arguments>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on the current page.</doc>
<arguments>
<arg>Password</arg>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20191231 22:23:47.877" endtime="20191231 22:23:47.893"></status>
</kw>
<status status="PASS" starttime="20191231 22:23:47.876" endtime="20191231 22:23:47.893"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20191231 22:23:47.893" endtime="20191231 22:23:47.898"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20191231 22:23:49.900" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20191231 22:23:47.898" endtime="20191231 22:23:49.900"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20191231 22:23:50.040" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Firefox-selenium-screenshot-1.png"&gt;&lt;img src="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Firefox-selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20191231 22:23:49.900" endtime="20191231 22:23:50.040"></status>
</kw>
<status status="PASS" starttime="20191231 22:23:43.735" endtime="20191231 22:23:50.040"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="teardown">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20191231 22:23:52.609" endtime="20191231 22:23:54.235"></status>
</kw>
<test id="s1-s8-s2-t1" name="Go to the sign up page from the login page.">
<kw name="Click Sign Up Link" library="Selenium-Desktop-Resources">
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20191231 22:23:50.042" endtime="20191231 22:23:50.044"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20191231 22:23:50.177" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Firefox-selenium-screenshot-2.png"&gt;&lt;img src="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Firefox-selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20191231 22:23:50.045" endtime="20191231 22:23:50.177"></status>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<doc>Clicks a link identified by ``locator``.</doc>
<arguments>
<arg>//a[@href="/signup"]</arg>
</arguments>
<msg timestamp="20191231 22:23:50.177" level="INFO">Clicking link '//a[@href="/signup"]'.</msg>
<status status="PASS" starttime="20191231 22:23:50.177" endtime="20191231 22:23:50.432"></status>
</kw>
<status status="PASS" starttime="20191231 22:23:50.041" endtime="20191231 22:23:50.433"></status>
</kw>
<tags>
<tag>Desktop Firefox</tag>
</tags>
<status status="PASS" starttime="20191231 22:23:50.040" endtime="20191231 22:23:50.433" critical="yes"></status>
</test>
<test id="s1-s8-s2-t2" name="Quickly check that the sign up page loaded.">
<kw name="Check The Sign Up Page" library="Selenium-Desktop-Resources">
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20191231 22:23:50.436" endtime="20191231 22:23:50.443"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>${RETRY_AMOUNT}x</arg>
<arg>0.1 sec</arg>
<arg>Wait Until Page Contains</arg>
<arg>information</arg>
<arg>0.5s</arg>
</arguments>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on the current page.</doc>
<arguments>
<arg>information</arg>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20191231 22:23:50.444" endtime="20191231 22:23:50.463"></status>
</kw>
<status status="PASS" starttime="20191231 22:23:50.443" endtime="20191231 22:23:50.463"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20191231 22:23:50.464" endtime="20191231 22:23:50.467"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20191231 22:23:52.468" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20191231 22:23:50.467" endtime="20191231 22:23:52.469"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20191231 22:23:52.608" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Firefox-selenium-screenshot-3.png"&gt;&lt;img src="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Firefox-selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20191231 22:23:52.469" endtime="20191231 22:23:52.608"></status>
</kw>
<status status="PASS" starttime="20191231 22:23:50.435" endtime="20191231 22:23:52.608"></status>
</kw>
<tags>
<tag>Desktop Firefox</tag>
</tags>
<status status="PASS" starttime="20191231 22:23:50.434" endtime="20191231 22:23:52.609" critical="yes"></status>
</test>
<doc>Simple example using SeleniumLibrary.</doc>
<status status="PASS" starttime="20191231 22:23:43.552" endtime="20191231 22:23:54.235"></status>
</suite>
<suite id="s1-s8-s3" name="Desktop-Example-Safari" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Tests/Workshop-Part-Two/Desktop-Example-Safari.robot">
<kw name="Open Safari Browser To Specified URL" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20191231 22:23:43.753" level="INFO">Opening browser 'Safari' to base url 'https://owasp-goat-app.herokuapp.com/login'.</msg>
<status status="PASS" starttime="20191231 22:23:43.752" endtime="20191231 22:23:46.303"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20191231 22:23:46.304" endtime="20191231 22:23:46.308"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>${RETRY_AMOUNT}x</arg>
<arg>0.1s</arg>
<arg>Wait Until Page Contains</arg>
<arg>Password</arg>
<arg>0.5s</arg>
</arguments>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on the current page.</doc>
<arguments>
<arg>Password</arg>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20191231 22:23:46.308" endtime="20191231 22:23:46.315"></status>
</kw>
<status status="PASS" starttime="20191231 22:23:46.308" endtime="20191231 22:23:46.315"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20191231 22:23:46.315" endtime="20191231 22:23:46.317"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20191231 22:23:48.320" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20191231 22:23:46.318" endtime="20191231 22:23:48.320"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20191231 22:23:48.376" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Safari-selenium-screenshot-1.png"&gt;&lt;img src="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Safari-selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20191231 22:23:48.320" endtime="20191231 22:23:48.377"></status>
</kw>
<status status="PASS" starttime="20191231 22:23:43.752" endtime="20191231 22:23:48.377"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="teardown">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20191231 22:24:08.651" endtime="20191231 22:24:08.668"></status>
</kw>
<test id="s1-s8-s3-t1" name="Go to the sign up page from the login page.">
<kw name="Click Sign Up Link" library="Selenium-Desktop-Resources">
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20191231 22:23:48.378" endtime="20191231 22:23:48.381"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20191231 22:23:48.429" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Safari-selenium-screenshot-2.png"&gt;&lt;img src="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Safari-selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20191231 22:23:48.382" endtime="20191231 22:23:48.429"></status>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<doc>Clicks a link identified by ``locator``.</doc>
<arguments>
<arg>//a[@href="/signup"]</arg>
</arguments>
<msg timestamp="20191231 22:23:48.430" level="INFO">Clicking link '//a[@href="/signup"]'.</msg>
<status status="PASS" starttime="20191231 22:23:48.429" endtime="20191231 22:23:48.453"></status>
</kw>
<status status="PASS" starttime="20191231 22:23:48.378" endtime="20191231 22:23:48.454"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191231 22:23:48.454" endtime="20191231 22:23:48.454"></status>
</kw>
<status status="PASS" starttime="20191231 22:23:48.454" endtime="20191231 22:23:48.454"></status>
</kw>
<tags>
<tag>Desktop Safari</tag>
</tags>
<status status="PASS" starttime="20191231 22:23:48.377" endtime="20191231 22:23:48.454" critical="yes"></status>
</test>
<test id="s1-s8-s3-t2" name="Quickly check that the sign up page loaded.">
<kw name="Check The Sign Up Page Demonstrate Failure">
<kw name="Page Should Contain" library="SeleniumLibrary">
<doc>Verifies that current page contains ``text``.</doc>
<arguments>
<arg>THIS SHOULD FAIL</arg>
</arguments>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20191231 22:24:08.429" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Safari-selenium-screenshot-3.png"&gt;&lt;img src="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Safari-selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20191231 22:24:08.380" endtime="20191231 22:24:08.429"></status>
</kw>
<msg timestamp="20191231 22:24:08.433" level="FAIL">Page should have contained text 'THIS SHOULD FAIL' but did not.</msg>
<status status="FAIL" starttime="20191231 22:23:48.456" endtime="20191231 22:24:08.433"></status>
</kw>
<status status="FAIL" starttime="20191231 22:23:48.455" endtime="20191231 22:24:08.433"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email For Desktop Browser Check">
<arguments>
<arg>desktop Safari checks in the Desktop-Safari.robot file</arg>
<arg>Prod</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config ${EXECDIR}/Workshop-Examples/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 22:24:08.435" level="INFO">Starting process:
echo "The desktop Safari checks in the Desktop-Safari.robot file failed in the Prod environment." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 22:24:08.440" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 22:24:08.648" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 22:24:08.434" endtime="20191231 22:24:08.648"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20191231 22:24:08.648" endtime="20191231 22:24:08.649"></status>
</kw>
<status status="PASS" starttime="20191231 22:24:08.434" endtime="20191231 22:24:08.649"></status>
</kw>
<status status="PASS" starttime="20191231 22:24:08.434" endtime="20191231 22:24:08.649"></status>
</kw>
<status status="PASS" starttime="20191231 22:24:08.434" endtime="20191231 22:24:08.649"></status>
</kw>
<status status="PASS" starttime="20191231 22:24:08.433" endtime="20191231 22:24:08.649"></status>
</kw>
<tags>
<tag>Desktop Safari</tag>
</tags>
<status status="FAIL" starttime="20191231 22:23:48.455" endtime="20191231 22:24:08.650" critical="yes">Page should have contained text 'THIS SHOULD FAIL' but did not.</status>
</test>
<doc>Simple example using SeleniumLibrary.</doc>
<status status="FAIL" starttime="20191231 22:23:43.551" endtime="20191231 22:24:08.668"></status>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 3 executions.</doc>
<status status="FAIL" starttime="20191231 22:23:43.529" endtime="20191231 22:24:08.673"></status>
</suite>
<suite id="s1-s9" name="Robot Framework test run with user-created Python Library in parallel">
<suite id="s1-s9-s1" name="Docker-Example-Python-Library1-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library1-Enhanced-Version.robot">
<test id="s1-s9-s1-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a PATCH request to &quot;title&quot; for jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Patch Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:42.796" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:42.284" endtime="20200101 03:27:42.796"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.796" endtime="20200101 03:27:42.797"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.797" endtime="20200101 03:27:42.798"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.798" endtime="20200101 03:27:42.799"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.799" endtime="20200101 03:27:42.800"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.800" endtime="20200101 03:27:42.801"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.801" endtime="20200101 03:27:42.802"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.802" endtime="20200101 03:27:42.803"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.803" endtime="20200101 03:27:42.805"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.805" endtime="20200101 03:27:42.806"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.806" endtime="20200101 03:27:42.807"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.807" endtime="20200101 03:27:42.807"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:42.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:42.808" endtime="20200101 03:27:42.808"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.808" endtime="20200101 03:27:42.809"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.809" endtime="20200101 03:27:42.810"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:42.809" endtime="20200101 03:27:42.810"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:42.283" endtime="20200101 03:27:42.810" critical="yes"></status>
</test>
<test id="s1-s9-s1-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a GET request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Get Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:42.851" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:42.814" endtime="20200101 03:27:42.851"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.851" endtime="20200101 03:27:42.852"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.852" endtime="20200101 03:27:42.854"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.854" endtime="20200101 03:27:42.855"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.855" endtime="20200101 03:27:42.856"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.856" endtime="20200101 03:27:42.857"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.857" endtime="20200101 03:27:42.858"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.858" endtime="20200101 03:27:42.858"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.858" endtime="20200101 03:27:42.859"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.859" endtime="20200101 03:27:42.860"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.860" endtime="20200101 03:27:42.861"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.861" endtime="20200101 03:27:42.862"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:42.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200101 03:27:42.863" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20200101 03:27:42.862" endtime="20200101 03:27:42.863"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200101 03:27:42.865" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20200101 03:27:42.871" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200101 03:27:43.073" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200101 03:27:42.865" endtime="20200101 03:27:43.073"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20200101 03:27:43.074" endtime="20200101 03:27:43.074"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:42.864" endtime="20200101 03:27:43.074"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:42.864" endtime="20200101 03:27:43.074"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:42.864" endtime="20200101 03:27:43.074"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:42.863" endtime="20200101 03:27:43.075"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20200101 03:27:42.812" endtime="20200101 03:27:43.075" critical="yes">200 == 200</status>
</test>
<test id="s1-s9-s1-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a POST request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Post Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:43.608" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:43.078" endtime="20200101 03:27:43.609"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.609" endtime="20200101 03:27:43.610"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.610" endtime="20200101 03:27:43.611"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.611" endtime="20200101 03:27:43.612"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.612" endtime="20200101 03:27:43.613"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.614" endtime="20200101 03:27:43.614"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.615" endtime="20200101 03:27:43.615"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.615" endtime="20200101 03:27:43.616"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.616" endtime="20200101 03:27:43.617"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.618" endtime="20200101 03:27:43.618"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.618" endtime="20200101 03:27:43.619"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.619" endtime="20200101 03:27:43.620"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200101 03:27:43.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:43.620" endtime="20200101 03:27:43.622"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.622" endtime="20200101 03:27:43.623"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20200101 03:27:43.624" level="INFO">${POST_RESPONSE_VALUES} = [101]</msg>
<status status="PASS" starttime="20200101 03:27:43.623" endtime="20200101 03:27:43.624"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[101]</arg>
</arguments>
<msg timestamp="20200101 03:27:43.624" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:43.624" endtime="20200101 03:27:43.624"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.625" endtime="20200101 03:27:43.627"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:43.625" endtime="20200101 03:27:43.627"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:43.076" endtime="20200101 03:27:43.628" critical="yes"></status>
</test>
<test id="s1-s9-s1-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a DELETE request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Delete Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:43.886" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:43.631" endtime="20200101 03:27:43.886"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.886" endtime="20200101 03:27:43.887"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.888" endtime="20200101 03:27:43.889"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.889" endtime="20200101 03:27:43.890"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.890" endtime="20200101 03:27:43.891"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.891" endtime="20200101 03:27:43.892"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.892" endtime="20200101 03:27:43.893"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.893" endtime="20200101 03:27:43.893"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:43.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:43.893" endtime="20200101 03:27:43.894"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20200101 03:27:43.894" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20200101 03:27:43.894" endtime="20200101 03:27:43.894"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.895" endtime="20200101 03:27:43.895"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:43.895" endtime="20200101 03:27:43.896"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:43.629" endtime="20200101 03:27:43.896" critical="yes"></status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites".</doc>
<status status="FAIL" starttime="20200101 03:27:42.082" endtime="20200101 03:27:43.897"></status>
</suite>
<suite id="s1-s9-s2" name="Docker-Example-Python-Library2-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library2-Enhanced-Version.robot">
<test id="s1-s9-s2-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PATCH request to &quot;body&quot; for jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Patch Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:42.794" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:42.284" endtime="20200101 03:27:42.794"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.795" endtime="20200101 03:27:42.796"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.796" endtime="20200101 03:27:42.797"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.797" endtime="20200101 03:27:42.798"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.798" endtime="20200101 03:27:42.799"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.799" endtime="20200101 03:27:42.800"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.800" endtime="20200101 03:27:42.801"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.801" endtime="20200101 03:27:42.802"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.802" endtime="20200101 03:27:42.803"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.804" endtime="20200101 03:27:42.805"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.805" endtime="20200101 03:27:42.806"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.806" endtime="20200101 03:27:42.807"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:42.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:42.807" endtime="20200101 03:27:42.808"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.808" endtime="20200101 03:27:42.808"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:42.809" endtime="20200101 03:27:42.809"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:42.808" endtime="20200101 03:27:42.809"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:42.283" endtime="20200101 03:27:42.809" critical="yes"></status>
</test>
<test id="s1-s9-s2-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Put Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:43.066" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:42.813" endtime="20200101 03:27:43.066"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.066" endtime="20200101 03:27:43.067"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.068" endtime="20200101 03:27:43.068"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.068" endtime="20200101 03:27:43.069"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.069" endtime="20200101 03:27:43.071"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.071" endtime="20200101 03:27:43.072"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.072" endtime="20200101 03:27:43.073"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.073" endtime="20200101 03:27:43.074"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.074" endtime="20200101 03:27:43.075"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.075" endtime="20200101 03:27:43.076"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.076" endtime="20200101 03:27:43.076"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.077" endtime="20200101 03:27:43.077"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:43.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:43.078" endtime="20200101 03:27:43.078"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.078" endtime="20200101 03:27:43.079"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20200101 03:27:43.080" level="INFO">${POST_RESPONSE_VALUES} = [2]</msg>
<status status="PASS" starttime="20200101 03:27:43.079" endtime="20200101 03:27:43.080"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[2]</arg>
</arguments>
<msg timestamp="20200101 03:27:43.080" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:43.080" endtime="20200101 03:27:43.081"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.081" endtime="20200101 03:27:43.081"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:43.081" endtime="20200101 03:27:43.082"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:42.812" endtime="20200101 03:27:43.082" critical="yes"></status>
</test>
<test id="s1-s9-s2-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a DELETE request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Delete Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:43.608" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:43.084" endtime="20200101 03:27:43.609"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.609" endtime="20200101 03:27:43.609"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.610" endtime="20200101 03:27:43.611"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.611" endtime="20200101 03:27:43.612"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.612" endtime="20200101 03:27:43.613"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.614" endtime="20200101 03:27:43.614"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.615" endtime="20200101 03:27:43.615"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:43.615" endtime="20200101 03:27:43.616"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:43.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200101 03:27:43.617" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20200101 03:27:43.616" endtime="20200101 03:27:43.617"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200101 03:27:43.623" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20200101 03:27:43.627" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200101 03:27:43.829" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200101 03:27:43.622" endtime="20200101 03:27:43.829"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20200101 03:27:43.830" endtime="20200101 03:27:43.831"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:43.620" endtime="20200101 03:27:43.831"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:43.620" endtime="20200101 03:27:43.831"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:43.620" endtime="20200101 03:27:43.832"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:43.619" endtime="20200101 03:27:43.832"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20200101 03:27:43.083" endtime="20200101 03:27:43.832" critical="yes">200 == 200</status>
</test>
<test id="s1-s9-s2-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a GET request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Get Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:44.041" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:43.836" endtime="20200101 03:27:44.042"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:44.042" endtime="20200101 03:27:44.043"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:44.043" endtime="20200101 03:27:44.044"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:44.044" endtime="20200101 03:27:44.044"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:44.044" endtime="20200101 03:27:44.045"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:44.045" endtime="20200101 03:27:44.046"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:44.046" endtime="20200101 03:27:44.046"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:44.047" endtime="20200101 03:27:44.047"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:44.047" endtime="20200101 03:27:44.048"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:44.048" endtime="20200101 03:27:44.049"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:44.049" endtime="20200101 03:27:44.049"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:44.050" endtime="20200101 03:27:44.050"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:44.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:44.050" endtime="20200101 03:27:44.051"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>qui est esse</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:44.051" endtime="20200101 03:27:44.051"></status>
</kw>
<kw name="Dictionary Should Not Contain Value" library="Collections">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:44.051" endtime="20200101 03:27:44.052"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:44.052" endtime="20200101 03:27:44.053"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:44.052" endtime="20200101 03:27:44.053"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:43.834" endtime="20200101 03:27:44.053" critical="yes"></status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites" option.</doc>
<status status="FAIL" starttime="20200101 03:27:42.082" endtime="20200101 03:27:44.054"></status>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 2 executions.</doc>
<metadata>
<item name="Randomized">Suites and tests (seed 1074138897850314781)</item>
</metadata>
<status status="FAIL" starttime="20200101 03:27:42.049" endtime="20200101 03:27:44.058"></status>
</suite>
<suite id="s1-s10" name="Robot Framework test run with user-created Python Library one test at a time in serial random order">
<suite id="s1-s10-s1" name="Docker-Example-Python-Library2-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library2-Enhanced-Version.robot">
<test id="s1-s10-s1-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a GET request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Get Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:54.825" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.798" endtime="20200101 03:27:54.825"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.826" endtime="20200101 03:27:54.826"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.827" endtime="20200101 03:27:54.828"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.828" endtime="20200101 03:27:54.829"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.829" endtime="20200101 03:27:54.829"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.830" endtime="20200101 03:27:54.830"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.830" endtime="20200101 03:27:54.831"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.831" endtime="20200101 03:27:54.831"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.831" endtime="20200101 03:27:54.832"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.832" endtime="20200101 03:27:54.833"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.833" endtime="20200101 03:27:54.834"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.834" endtime="20200101 03:27:54.835"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:54.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.835" endtime="20200101 03:27:54.836"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>qui est esse</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.836" endtime="20200101 03:27:54.836"></status>
</kw>
<kw name="Dictionary Should Not Contain Value" library="Collections">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.836" endtime="20200101 03:27:54.837"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.837" endtime="20200101 03:27:54.838"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:54.837" endtime="20200101 03:27:54.838"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:54.797" endtime="20200101 03:27:54.838" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test id="s1-s10-s1-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Put Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:54.478" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.208" endtime="20200101 03:27:54.478"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.478" endtime="20200101 03:27:54.479"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.479" endtime="20200101 03:27:54.479"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.480" endtime="20200101 03:27:54.480"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.480" endtime="20200101 03:27:54.481"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.481" endtime="20200101 03:27:54.481"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.482" endtime="20200101 03:27:54.482"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.482" endtime="20200101 03:27:54.483"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.483" endtime="20200101 03:27:54.484"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.484" endtime="20200101 03:27:54.485"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.485" endtime="20200101 03:27:54.485"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.485" endtime="20200101 03:27:54.486"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:54.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.487" endtime="20200101 03:27:54.487"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.487" endtime="20200101 03:27:54.488"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20200101 03:27:54.488" level="INFO">${POST_RESPONSE_VALUES} = [2]</msg>
<status status="PASS" starttime="20200101 03:27:54.488" endtime="20200101 03:27:54.488"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[2]</arg>
</arguments>
<msg timestamp="20200101 03:27:54.489" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.488" endtime="20200101 03:27:54.489"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.489" endtime="20200101 03:27:54.490"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:54.489" endtime="20200101 03:27:54.490"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:54.207" endtime="20200101 03:27:54.490" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test id="s1-s10-s1-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PATCH request to &quot;body&quot; for jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Patch Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:54.786" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.492" endtime="20200101 03:27:54.786"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.787" endtime="20200101 03:27:54.787"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.787" endtime="20200101 03:27:54.788"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.788" endtime="20200101 03:27:54.788"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.788" endtime="20200101 03:27:54.789"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.789" endtime="20200101 03:27:54.790"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.790" endtime="20200101 03:27:54.790"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.790" endtime="20200101 03:27:54.791"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.791" endtime="20200101 03:27:54.792"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.792" endtime="20200101 03:27:54.792"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.793" endtime="20200101 03:27:54.793"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.793" endtime="20200101 03:27:54.794"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:54.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.794" endtime="20200101 03:27:54.795"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.795" endtime="20200101 03:27:54.795"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.796" endtime="20200101 03:27:54.796"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:54.796" endtime="20200101 03:27:54.796"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:54.491" endtime="20200101 03:27:54.796" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test id="s1-s10-s1-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a DELETE request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Delete Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:55.054" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.840" endtime="20200101 03:27:55.055"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:55.055" endtime="20200101 03:27:55.055"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:55.055" endtime="20200101 03:27:55.056"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:55.056" endtime="20200101 03:27:55.056"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:55.057" endtime="20200101 03:27:55.057"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:55.057" endtime="20200101 03:27:55.058"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:55.058" endtime="20200101 03:27:55.058"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:55.059" endtime="20200101 03:27:55.059"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:55.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200101 03:27:55.060" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20200101 03:27:55.059" endtime="20200101 03:27:55.060"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200101 03:27:55.062" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20200101 03:27:55.066" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200101 03:27:55.370" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200101 03:27:55.062" endtime="20200101 03:27:55.370"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20200101 03:27:55.371" endtime="20200101 03:27:55.371"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:55.062" endtime="20200101 03:27:55.371"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:55.061" endtime="20200101 03:27:55.372"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:55.061" endtime="20200101 03:27:55.372"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:55.061" endtime="20200101 03:27:55.372"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20200101 03:27:54.839" endtime="20200101 03:27:55.372" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="fail"&gt;FAIL&lt;/span&gt;&lt;br&gt;New message: 200 == 200&lt;hr&gt;Old status: &lt;span class="fail"&gt;FAIL&lt;/span&gt;&lt;br&gt;Old message: 200 == 200</status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites" option.</doc>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1162"></status>
</suite>
<suite id="s1-s10-s2" name="Docker-Example-Python-Library1-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library1-Enhanced-Version.robot">
<test id="s1-s10-s2-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a DELETE request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Delete Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:54.170" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:53.725" endtime="20200101 03:27:54.170"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.170" endtime="20200101 03:27:54.171"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.171" endtime="20200101 03:27:54.171"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.172" endtime="20200101 03:27:54.172"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.172" endtime="20200101 03:27:54.173"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.173" endtime="20200101 03:27:54.173"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.173" endtime="20200101 03:27:54.174"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.174" endtime="20200101 03:27:54.174"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:54.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.175" endtime="20200101 03:27:54.175"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20200101 03:27:54.176" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20200101 03:27:54.176" endtime="20200101 03:27:54.176"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.177" endtime="20200101 03:27:54.177"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:54.177" endtime="20200101 03:27:54.177"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:53.724" endtime="20200101 03:27:54.178" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test id="s1-s10-s2-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a GET request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Get Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:53.400" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:53.363" endtime="20200101 03:27:53.400"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.401" endtime="20200101 03:27:53.401"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.401" endtime="20200101 03:27:53.402"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.402" endtime="20200101 03:27:53.402"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.402" endtime="20200101 03:27:53.403"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.403" endtime="20200101 03:27:53.403"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.404" endtime="20200101 03:27:53.404"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.404" endtime="20200101 03:27:53.404"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.405" endtime="20200101 03:27:53.405"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.405" endtime="20200101 03:27:53.406"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.406" endtime="20200101 03:27:53.406"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.407" endtime="20200101 03:27:53.407"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:53.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200101 03:27:53.409" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20200101 03:27:53.407" endtime="20200101 03:27:53.409"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200101 03:27:53.412" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20200101 03:27:53.416" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200101 03:27:53.720" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200101 03:27:53.411" endtime="20200101 03:27:53.720"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20200101 03:27:53.721" endtime="20200101 03:27:53.721"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:53.411" endtime="20200101 03:27:53.722"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:53.410" endtime="20200101 03:27:53.722"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:53.410" endtime="20200101 03:27:53.722"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:53.410" endtime="20200101 03:27:53.723"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20200101 03:27:53.362" endtime="20200101 03:27:53.723" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="fail"&gt;FAIL&lt;/span&gt;&lt;br&gt;New message: 200 == 200&lt;hr&gt;Old status: &lt;span class="fail"&gt;FAIL&lt;/span&gt;&lt;br&gt;Old message: 200 == 200</status>
</test>
<test id="s1-s10-s2-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a PATCH request to &quot;title&quot; for jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Patch Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:53.351" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:52.953" endtime="20200101 03:27:53.351"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.351" endtime="20200101 03:27:53.352"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.352" endtime="20200101 03:27:53.352"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.353" endtime="20200101 03:27:53.353"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.353" endtime="20200101 03:27:53.354"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.354" endtime="20200101 03:27:53.354"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.354" endtime="20200101 03:27:53.355"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.355" endtime="20200101 03:27:53.356"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.356" endtime="20200101 03:27:53.357"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.357" endtime="20200101 03:27:53.358"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.358" endtime="20200101 03:27:53.358"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.359" endtime="20200101 03:27:53.359"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:53.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:53.359" endtime="20200101 03:27:53.360"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.360" endtime="20200101 03:27:53.360"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.361" endtime="20200101 03:27:53.361"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:53.361" endtime="20200101 03:27:53.361"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:52.952" endtime="20200101 03:27:53.362" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test id="s1-s10-s2-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a POST request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Post Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:52.939" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:52.426" endtime="20200101 03:27:52.940"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.940" endtime="20200101 03:27:52.940"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.940" endtime="20200101 03:27:52.941"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.941" endtime="20200101 03:27:52.942"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.942" endtime="20200101 03:27:52.942"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.942" endtime="20200101 03:27:52.943"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.943" endtime="20200101 03:27:52.943"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.943" endtime="20200101 03:27:52.944"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.944" endtime="20200101 03:27:52.944"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.945" endtime="20200101 03:27:52.945"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.945" endtime="20200101 03:27:52.946"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.946" endtime="20200101 03:27:52.946"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200101 03:27:52.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:52.946" endtime="20200101 03:27:52.947"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.947" endtime="20200101 03:27:52.947"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20200101 03:27:52.948" level="INFO">${POST_RESPONSE_VALUES} = [101]</msg>
<status status="PASS" starttime="20200101 03:27:52.948" endtime="20200101 03:27:52.948"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[101]</arg>
</arguments>
<msg timestamp="20200101 03:27:52.949" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:52.948" endtime="20200101 03:27:52.949"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.950" endtime="20200101 03:27:52.950"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:52.949" endtime="20200101 03:27:52.950"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:52.425" endtime="20200101 03:27:52.950" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites".</doc>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1750"></status>
</suite>
<metadata>
<item name="Randomized">Suites and tests (seed 7607185112607719900)</item>
</metadata>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2912"></status>
</suite>
<suite id="s1-s11" name="Robot Framework test run with user-created Python Library one test at a time in serial random order">
<suite id="s1-s11-s1" name="Docker-Example-Python-Library1-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library1-Enhanced-Version.robot">
<test id="s1-s11-s1-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a POST request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Post Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:52.939" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:52.426" endtime="20200101 03:27:52.940"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.940" endtime="20200101 03:27:52.940"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.940" endtime="20200101 03:27:52.941"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.941" endtime="20200101 03:27:52.942"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.942" endtime="20200101 03:27:52.942"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.942" endtime="20200101 03:27:52.943"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.943" endtime="20200101 03:27:52.943"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.943" endtime="20200101 03:27:52.944"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.944" endtime="20200101 03:27:52.944"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.945" endtime="20200101 03:27:52.945"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.945" endtime="20200101 03:27:52.946"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.946" endtime="20200101 03:27:52.946"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200101 03:27:52.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:52.946" endtime="20200101 03:27:52.947"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.947" endtime="20200101 03:27:52.947"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20200101 03:27:52.948" level="INFO">${POST_RESPONSE_VALUES} = [101]</msg>
<status status="PASS" starttime="20200101 03:27:52.948" endtime="20200101 03:27:52.948"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[101]</arg>
</arguments>
<msg timestamp="20200101 03:27:52.949" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:52.948" endtime="20200101 03:27:52.949"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:52.950" endtime="20200101 03:27:52.950"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:52.949" endtime="20200101 03:27:52.950"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:52.425" endtime="20200101 03:27:52.950" critical="yes"></status>
</test>
<test id="s1-s11-s1-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a PATCH request to &quot;title&quot; for jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Patch Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:53.351" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:52.953" endtime="20200101 03:27:53.351"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.351" endtime="20200101 03:27:53.352"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.352" endtime="20200101 03:27:53.352"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.353" endtime="20200101 03:27:53.353"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.353" endtime="20200101 03:27:53.354"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.354" endtime="20200101 03:27:53.354"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.354" endtime="20200101 03:27:53.355"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.355" endtime="20200101 03:27:53.356"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.356" endtime="20200101 03:27:53.357"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.357" endtime="20200101 03:27:53.358"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.358" endtime="20200101 03:27:53.358"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.359" endtime="20200101 03:27:53.359"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:53.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:53.359" endtime="20200101 03:27:53.360"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.360" endtime="20200101 03:27:53.360"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.361" endtime="20200101 03:27:53.361"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:53.361" endtime="20200101 03:27:53.361"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:52.952" endtime="20200101 03:27:53.362" critical="yes"></status>
</test>
<test id="s1-s11-s1-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a GET request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Get Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:53.400" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:53.363" endtime="20200101 03:27:53.400"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.401" endtime="20200101 03:27:53.401"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.401" endtime="20200101 03:27:53.402"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.402" endtime="20200101 03:27:53.402"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.402" endtime="20200101 03:27:53.403"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.403" endtime="20200101 03:27:53.403"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.404" endtime="20200101 03:27:53.404"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.404" endtime="20200101 03:27:53.404"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.405" endtime="20200101 03:27:53.405"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.405" endtime="20200101 03:27:53.406"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.406" endtime="20200101 03:27:53.406"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:53.407" endtime="20200101 03:27:53.407"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:53.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200101 03:27:53.409" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20200101 03:27:53.407" endtime="20200101 03:27:53.409"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200101 03:27:53.412" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20200101 03:27:53.416" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200101 03:27:53.720" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200101 03:27:53.411" endtime="20200101 03:27:53.720"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20200101 03:27:53.721" endtime="20200101 03:27:53.721"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:53.411" endtime="20200101 03:27:53.722"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:53.410" endtime="20200101 03:27:53.722"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:53.410" endtime="20200101 03:27:53.722"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:53.410" endtime="20200101 03:27:53.723"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20200101 03:27:53.362" endtime="20200101 03:27:53.723" critical="yes">200 == 200</status>
</test>
<test id="s1-s11-s1-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a DELETE request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Delete Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:54.170" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:53.725" endtime="20200101 03:27:54.170"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.170" endtime="20200101 03:27:54.171"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.171" endtime="20200101 03:27:54.171"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.172" endtime="20200101 03:27:54.172"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.172" endtime="20200101 03:27:54.173"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.173" endtime="20200101 03:27:54.173"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.173" endtime="20200101 03:27:54.174"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.174" endtime="20200101 03:27:54.174"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:54.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.175" endtime="20200101 03:27:54.175"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20200101 03:27:54.176" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20200101 03:27:54.176" endtime="20200101 03:27:54.176"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.177" endtime="20200101 03:27:54.177"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:54.177" endtime="20200101 03:27:54.177"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:53.724" endtime="20200101 03:27:54.178" critical="yes"></status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites".</doc>
<status status="FAIL" starttime="20200101 03:27:52.219" endtime="20200101 03:27:54.179"></status>
</suite>
<suite id="s1-s11-s2" name="Docker-Example-Python-Library2-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library2-Enhanced-Version.robot">
<test id="s1-s11-s2-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Put Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:54.478" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.208" endtime="20200101 03:27:54.478"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.478" endtime="20200101 03:27:54.479"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.479" endtime="20200101 03:27:54.479"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.480" endtime="20200101 03:27:54.480"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.480" endtime="20200101 03:27:54.481"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.481" endtime="20200101 03:27:54.481"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.482" endtime="20200101 03:27:54.482"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.482" endtime="20200101 03:27:54.483"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.483" endtime="20200101 03:27:54.484"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.484" endtime="20200101 03:27:54.485"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.485" endtime="20200101 03:27:54.485"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.485" endtime="20200101 03:27:54.486"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:54.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.487" endtime="20200101 03:27:54.487"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.487" endtime="20200101 03:27:54.488"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20200101 03:27:54.488" level="INFO">${POST_RESPONSE_VALUES} = [2]</msg>
<status status="PASS" starttime="20200101 03:27:54.488" endtime="20200101 03:27:54.488"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[2]</arg>
</arguments>
<msg timestamp="20200101 03:27:54.489" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.488" endtime="20200101 03:27:54.489"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.489" endtime="20200101 03:27:54.490"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:54.489" endtime="20200101 03:27:54.490"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:54.207" endtime="20200101 03:27:54.490" critical="yes"></status>
</test>
<test id="s1-s11-s2-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PATCH request to &quot;body&quot; for jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Patch Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:54.786" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.492" endtime="20200101 03:27:54.786"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.787" endtime="20200101 03:27:54.787"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.787" endtime="20200101 03:27:54.788"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.788" endtime="20200101 03:27:54.788"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.788" endtime="20200101 03:27:54.789"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.789" endtime="20200101 03:27:54.790"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.790" endtime="20200101 03:27:54.790"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.790" endtime="20200101 03:27:54.791"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.791" endtime="20200101 03:27:54.792"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.792" endtime="20200101 03:27:54.792"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.793" endtime="20200101 03:27:54.793"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.793" endtime="20200101 03:27:54.794"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:54.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.794" endtime="20200101 03:27:54.795"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.795" endtime="20200101 03:27:54.795"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.796" endtime="20200101 03:27:54.796"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:54.796" endtime="20200101 03:27:54.796"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:54.491" endtime="20200101 03:27:54.796" critical="yes"></status>
</test>
<test id="s1-s11-s2-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a GET request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Get Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:54.825" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.798" endtime="20200101 03:27:54.825"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.826" endtime="20200101 03:27:54.826"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.827" endtime="20200101 03:27:54.828"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.828" endtime="20200101 03:27:54.829"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.829" endtime="20200101 03:27:54.829"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.830" endtime="20200101 03:27:54.830"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.830" endtime="20200101 03:27:54.831"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.831" endtime="20200101 03:27:54.831"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.831" endtime="20200101 03:27:54.832"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.832" endtime="20200101 03:27:54.833"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.833" endtime="20200101 03:27:54.834"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.834" endtime="20200101 03:27:54.835"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:54.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.835" endtime="20200101 03:27:54.836"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>qui est esse</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.836" endtime="20200101 03:27:54.836"></status>
</kw>
<kw name="Dictionary Should Not Contain Value" library="Collections">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.836" endtime="20200101 03:27:54.837"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:54.837" endtime="20200101 03:27:54.838"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:54.837" endtime="20200101 03:27:54.838"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200101 03:27:54.797" endtime="20200101 03:27:54.838" critical="yes"></status>
</test>
<test id="s1-s11-s2-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a DELETE request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Delete Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20200101 03:27:55.054" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200101 03:27:54.840" endtime="20200101 03:27:55.055"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:55.055" endtime="20200101 03:27:55.055"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:55.055" endtime="20200101 03:27:55.056"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:55.056" endtime="20200101 03:27:55.056"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:55.057" endtime="20200101 03:27:55.057"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:55.057" endtime="20200101 03:27:55.058"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:55.058" endtime="20200101 03:27:55.058"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200101 03:27:55.059" endtime="20200101 03:27:55.059"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200101 03:27:55.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200101 03:27:55.060" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20200101 03:27:55.059" endtime="20200101 03:27:55.060"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200101 03:27:55.062" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20200101 03:27:55.066" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200101 03:27:55.370" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200101 03:27:55.062" endtime="20200101 03:27:55.370"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20200101 03:27:55.371" endtime="20200101 03:27:55.371"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:55.062" endtime="20200101 03:27:55.371"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:55.061" endtime="20200101 03:27:55.372"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:55.061" endtime="20200101 03:27:55.372"></status>
</kw>
<status status="PASS" starttime="20200101 03:27:55.061" endtime="20200101 03:27:55.372"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20200101 03:27:54.839" endtime="20200101 03:27:55.372" critical="yes">200 == 200</status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites" option.</doc>
<status status="FAIL" starttime="20200101 03:27:54.181" endtime="20200101 03:27:55.373"></status>
</suite>
<status status="FAIL" starttime="20200101 03:27:52.187" endtime="20200101 03:27:55.376"></status>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="38624"></status>
</suite>
<statistics>
<total>
<stat pass="34" fail="9">Critical Tests</stat>
<stat pass="34" fail="9">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0">Check_One</stat>
<stat pass="2" fail="0">Check_Three</stat>
<stat pass="2" fail="0">Check_Two</stat>
<stat pass="0" fail="2">Desktop Chrome</stat>
<stat pass="2" fail="0">Desktop Firefox</stat>
<stat pass="1" fail="1">Desktop Safari</stat>
<stat pass="2" fail="0">Group_One</stat>
<stat pass="2" fail="0">Group_Three</stat>
<stat pass="2" fail="0">Group_Two</stat>
<stat pass="18" fail="6">Regression_Tests</stat>
<stat pass="18" fail="6">Slightly_Refined_And_Room_For_Enhancements</stat>
<stat pass="1" fail="0">Start</stat>
</tag>
<suite>
<stat pass="34" fail="9" id="s1" name="Leon Robot Framework Assistant Combined Results Dashboard">Leon Robot Framework Assistant Combined Results Dashboard</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
