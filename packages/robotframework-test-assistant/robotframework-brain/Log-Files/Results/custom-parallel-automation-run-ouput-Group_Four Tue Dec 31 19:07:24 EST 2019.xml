<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 3.1.2 (Python 3.7.5 on darwin)" generated="20191231 19:10:17.149" rpa="false">
<suite id="s1" name="Leon Robot Framework Assistant Combined Results Dashboard">
<suite id="s1-s1" name="Group_One Tue Dec 31 19:07:22 EST 2019">
<suite id="s1-s1-s1" name="Leon-Robot-Framework-Customizable-Parallel-Runner1" source="/Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner1.robot">
<test id="s1-s1-s1-t1" name="AUTOMATED CHECK 1 - PARALLEL RUNNER 1 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 19:07:23.712" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 19:07:23.711" endtime="20191231 19:07:23.712"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 1 - A hypothetical automated check - PARALLEL RUNNER 1</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 19:07:23.712" level="INFO">Starting process:
echo "AUTOMATED CHECK 1 - A hypothetical automated check - PARALLEL RUNNER 1 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 19:07:23.718" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 19:07:24.028" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 19:07:23.712" endtime="20191231 19:07:24.029"></status>
</kw>
<status status="PASS" starttime="20191231 19:07:23.712" endtime="20191231 19:07:24.029"></status>
</kw>
<tags>
<tag>Group_One</tag>
</tags>
<status status="PASS" starttime="20191231 19:07:23.711" endtime="20191231 19:07:24.029" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 19:07:23.695" endtime="20191231 19:07:24.030"></status>
</suite>
<suite id="s1-s1-s2" name="Leon-Robot-Framework-Customizable-Parallel-Runner2" source="/Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner2.robot">
<test id="s1-s1-s2-t1" name="AUTOMATED CHECK 1 - PARALLEL RUNNER 2 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 19:07:23.712" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 19:07:23.712" endtime="20191231 19:07:23.712"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 1 - A hypothetical automated check - PARALLEL RUNNER 2</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 19:07:23.713" level="INFO">Starting process:
echo "AUTOMATED CHECK 1 - A hypothetical automated check - PARALLEL RUNNER 2 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 19:07:23.719" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 19:07:24.028" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 19:07:23.713" endtime="20191231 19:07:24.029"></status>
</kw>
<status status="PASS" starttime="20191231 19:07:23.712" endtime="20191231 19:07:24.029"></status>
</kw>
<tags>
<tag>Group_One</tag>
</tags>
<status status="PASS" starttime="20191231 19:07:23.711" endtime="20191231 19:07:24.029" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 19:07:23.695" endtime="20191231 19:07:24.030"></status>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 2 executions.</doc>
<status status="PASS" starttime="20191231 19:07:23.672" endtime="20191231 19:07:24.031"></status>
</suite>
<suite id="s1-s2" name="Group_Three Tue Dec 31 19:07:26 EST 2019">
<suite id="s1-s2-s1" name="Leon-Robot-Framework-Customizable-Parallel-Runner1" source="/Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner1.robot">
<test id="s1-s2-s1-t1" name="AUTOMATED CHECK 3 - PARALLEL RUNNER 1 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 19:07:27.353" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 19:07:27.353" endtime="20191231 19:07:27.353"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 3 - A hypothetical automated check - PARALLEL RUNNER 1</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 19:07:27.354" level="INFO">Starting process:
echo "AUTOMATED CHECK 3 - A hypothetical automated check - PARALLEL RUNNER 1 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 19:07:27.359" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 19:07:27.564" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 19:07:27.354" endtime="20191231 19:07:27.565"></status>
</kw>
<status status="PASS" starttime="20191231 19:07:27.353" endtime="20191231 19:07:27.565"></status>
</kw>
<tags>
<tag>Group_Three</tag>
</tags>
<status status="PASS" starttime="20191231 19:07:27.353" endtime="20191231 19:07:27.565" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 19:07:27.337" endtime="20191231 19:07:27.566"></status>
</suite>
<suite id="s1-s2-s2" name="Leon-Robot-Framework-Customizable-Parallel-Runner2" source="/Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner2.robot">
<test id="s1-s2-s2-t1" name="AUTOMATED CHECK 3 - PARALLEL RUNNER 2 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 19:07:27.353" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 19:07:27.353" endtime="20191231 19:07:27.353"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 3 - A hypothetical automated check - PARALLEL RUNNER 2</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 19:07:27.354" level="INFO">Starting process:
echo "AUTOMATED CHECK 3 - A hypothetical automated check - PARALLEL RUNNER 2 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 19:07:27.359" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 19:07:27.564" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 19:07:27.354" endtime="20191231 19:07:27.564"></status>
</kw>
<status status="PASS" starttime="20191231 19:07:27.353" endtime="20191231 19:07:27.565"></status>
</kw>
<tags>
<tag>Group_Three</tag>
</tags>
<status status="PASS" starttime="20191231 19:07:27.352" endtime="20191231 19:07:27.565" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 19:07:27.337" endtime="20191231 19:07:27.566"></status>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 2 executions.</doc>
<status status="PASS" starttime="20191231 19:07:27.315" endtime="20191231 19:07:27.567"></status>
</suite>
<suite id="s1-s3" name="Group_Two Tue Dec 31 19:07:21 EST 2019">
<suite id="s1-s3-s1" name="Leon-Robot-Framework-Customizable-Parallel-Runner1" source="/Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner1.robot">
<test id="s1-s3-s1-t1" name="AUTOMATED CHECK 2 - PARALLEL RUNNER 1 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 19:07:21.825" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 19:07:21.825" endtime="20191231 19:07:21.825"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 2 - A hypothetical automated check - PARALLEL RUNNER 1</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 19:07:21.826" level="INFO">Starting process:
echo "AUTOMATED CHECK 2 - A hypothetical automated check - PARALLEL RUNNER 1 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 19:07:21.832" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 19:07:22.141" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 19:07:21.826" endtime="20191231 19:07:22.142"></status>
</kw>
<status status="PASS" starttime="20191231 19:07:21.826" endtime="20191231 19:07:22.142"></status>
</kw>
<tags>
<tag>Group_Two</tag>
</tags>
<status status="PASS" starttime="20191231 19:07:21.825" endtime="20191231 19:07:22.142" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 19:07:21.808" endtime="20191231 19:07:22.143"></status>
</suite>
<suite id="s1-s3-s2" name="Leon-Robot-Framework-Customizable-Parallel-Runner2" source="/Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner2.robot">
<test id="s1-s3-s2-t1" name="AUTOMATED CHECK 2 - PARALLEL RUNNER 2 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 19:07:21.825" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 19:07:21.825" endtime="20191231 19:07:21.826"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 2 - A hypothetical automated check - PARALLEL RUNNER 2</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 19:07:21.826" level="INFO">Starting process:
echo "AUTOMATED CHECK 2 - A hypothetical automated check - PARALLEL RUNNER 2 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 19:07:21.832" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 19:07:22.141" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 19:07:21.826" endtime="20191231 19:07:22.142"></status>
</kw>
<status status="PASS" starttime="20191231 19:07:21.826" endtime="20191231 19:07:22.142"></status>
</kw>
<tags>
<tag>Group_Two</tag>
</tags>
<status status="PASS" starttime="20191231 19:07:21.825" endtime="20191231 19:07:22.142" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 19:07:21.809" endtime="20191231 19:07:22.143"></status>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 2 executions.</doc>
<status status="PASS" starttime="20191231 19:07:21.785" endtime="20191231 19:07:22.144"></status>
</suite>
<suite id="s1-s4" name="Robot Framework automation run in a manually constructed sequence set up through leon-ai with a CustomSerialAutomationRunnerFile.csv file">
<suite id="s1-s4-s1" name="Check_One Tue Dec 31 19:07:02 EST 2019" source="/Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s4-s1-t1" name="AUTOMATED CHECK 1 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 19:07:02.617" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 19:07:02.617" endtime="20191231 19:07:02.618"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 1 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 19:07:02.619" level="INFO">Starting process:
echo "AUTOMATED CHECK 1 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 19:07:02.623" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 19:07:03.134" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 19:07:02.619" endtime="20191231 19:07:03.134"></status>
</kw>
<status status="PASS" starttime="20191231 19:07:02.618" endtime="20191231 19:07:03.135"></status>
</kw>
<tags>
<tag>Check_One</tag>
</tags>
<status status="PASS" starttime="20191231 19:07:02.616" endtime="20191231 19:07:03.135" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 19:07:02.575" endtime="20191231 19:07:03.136"></status>
</suite>
<suite id="s1-s4-s2" name="Check_Three Tue Dec 31 19:06:58 EST 2019" source="/Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s4-s2-t1" name="AUTOMATED CHECK 3 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 19:06:59.045" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 19:06:59.045" endtime="20191231 19:06:59.045"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 3 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 19:06:59.046" level="INFO">Starting process:
echo "AUTOMATED CHECK 3 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 19:06:59.051" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 19:06:59.354" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 19:06:59.046" endtime="20191231 19:06:59.354"></status>
</kw>
<status status="PASS" starttime="20191231 19:06:59.045" endtime="20191231 19:06:59.354"></status>
</kw>
<tags>
<tag>Check_Three</tag>
</tags>
<status status="PASS" starttime="20191231 19:06:59.045" endtime="20191231 19:06:59.355" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 19:06:59.003" endtime="20191231 19:06:59.355"></status>
</suite>
<suite id="s1-s4-s3" name="Check_Two Tue Dec 31 19:06:59 EST 2019" source="/Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s4-s3-t1" name="AUTOMATED CHECK 2 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 19:07:00.240" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 19:07:00.239" endtime="20191231 19:07:00.240"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 2 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 19:07:00.240" level="INFO">Starting process:
echo "AUTOMATED CHECK 2 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 19:07:00.245" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 19:07:00.449" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 19:07:00.240" endtime="20191231 19:07:00.450"></status>
</kw>
<status status="PASS" starttime="20191231 19:07:00.240" endtime="20191231 19:07:00.450"></status>
</kw>
<tags>
<tag>Check_Two</tag>
</tags>
<status status="PASS" starttime="20191231 19:07:00.239" endtime="20191231 19:07:00.450" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 19:07:00.195" endtime="20191231 19:07:00.451"></status>
</suite>
<suite id="s1-s4-s4" name="Start Tue Dec 31 19:06:57 EST 2019" source="/Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s4-s4-t1" name="CUSTOM RUNNER START : This helps avoid skipping the first actual automated check in the runner file.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>This runs first.</arg>
</arguments>
<msg timestamp="20191231 19:06:58.157" level="INFO">This runs first.</msg>
<status status="PASS" starttime="20191231 19:06:58.157" endtime="20191231 19:06:58.157"></status>
</kw>
<tags>
<tag>Start</tag>
</tags>
<status status="PASS" starttime="20191231 19:06:58.156" endtime="20191231 19:06:58.157" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 19:06:58.114" endtime="20191231 19:06:58.157"></status>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="1212"></status>
</suite>
<suite id="s1-s5" name="Check_One Tue Dec 31 19:07:02 EST 2019" source="/Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s5-t1" name="AUTOMATED CHECK 1 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 19:07:02.617" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 19:07:02.617" endtime="20191231 19:07:02.618"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 1 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 19:07:02.619" level="INFO">Starting process:
echo "AUTOMATED CHECK 1 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 19:07:02.623" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 19:07:03.134" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 19:07:02.619" endtime="20191231 19:07:03.134"></status>
</kw>
<status status="PASS" starttime="20191231 19:07:02.618" endtime="20191231 19:07:03.135"></status>
</kw>
<tags>
<tag>Check_One</tag>
</tags>
<status status="PASS" starttime="20191231 19:07:02.616" endtime="20191231 19:07:03.135" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 19:07:02.575" endtime="20191231 19:07:03.136"></status>
</suite>
<suite id="s1-s6" name="Check_Three Tue Dec 31 19:06:58 EST 2019" source="/Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s6-t1" name="AUTOMATED CHECK 3 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 19:06:59.045" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 19:06:59.045" endtime="20191231 19:06:59.045"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 3 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 19:06:59.046" level="INFO">Starting process:
echo "AUTOMATED CHECK 3 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 19:06:59.051" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 19:06:59.354" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 19:06:59.046" endtime="20191231 19:06:59.354"></status>
</kw>
<status status="PASS" starttime="20191231 19:06:59.045" endtime="20191231 19:06:59.354"></status>
</kw>
<tags>
<tag>Check_Three</tag>
</tags>
<status status="PASS" starttime="20191231 19:06:59.045" endtime="20191231 19:06:59.355" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 19:06:59.003" endtime="20191231 19:06:59.355"></status>
</suite>
<suite id="s1-s7" name="Check_Two Tue Dec 31 19:06:59 EST 2019" source="/Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s7-t1" name="AUTOMATED CHECK 2 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20191231 19:07:00.240" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20191231 19:07:00.239" endtime="20191231 19:07:00.240"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 2 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191231 19:07:00.240" level="INFO">Starting process:
echo "AUTOMATED CHECK 2 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Downloads/leon-develop/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20191231 19:07:00.245" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191231 19:07:00.449" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191231 19:07:00.240" endtime="20191231 19:07:00.450"></status>
</kw>
<status status="PASS" starttime="20191231 19:07:00.240" endtime="20191231 19:07:00.450"></status>
</kw>
<tags>
<tag>Check_Two</tag>
</tags>
<status status="PASS" starttime="20191231 19:07:00.239" endtime="20191231 19:07:00.450" critical="yes"></status>
</test>
<status status="PASS" starttime="20191231 19:07:00.195" endtime="20191231 19:07:00.451"></status>
</suite>
<suite id="s1-s8" name="Robot Framework Web Browser In Docker Container Test Run" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Firefox.robot">
<kw name="Open Firefox Browser To Specified URL" type="setup">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Close All Browsers</arg>
</arguments>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20191228 01:43:36.443" endtime="20191228 01:43:36.444"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:36.443" endtime="20191228 01:43:36.444"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20191228 01:43:36.444" level="INFO">Opening browser 'Firefox' to base url 'https://owasp-goat-app.herokuapp.com/login'.</msg>
<status status="PASS" starttime="20191228 01:43:36.444" endtime="20191228 01:43:39.082"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:39.082" endtime="20191228 01:43:39.087"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>${RETRY_AMOUNT}x</arg>
<arg>0.1s</arg>
<arg>Wait Until Page Contains</arg>
<arg>Password</arg>
<arg>0.25s</arg>
</arguments>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on current page.</doc>
<arguments>
<arg>Password</arg>
<arg>0.25s</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:39.087" endtime="20191228 01:43:39.102"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:39.087" endtime="20191228 01:43:39.102"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:39.102" endtime="20191228 01:43:39.105"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20191228 01:43:41.106" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20191228 01:43:39.105" endtime="20191228 01:43:41.106"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<msg timestamp="20191228 01:43:41.162" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20191228 01:43:41.106" endtime="20191228 01:43:41.162"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20191228 01:43:36.443" endtime="20191228 01:43:41.162"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="teardown">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20191228 01:43:43.549" endtime="20191228 01:43:44.262"></status>
</kw>
<test id="s1-s8-t1" name="Go to the sign up page from the login page.">
<kw name="Click Sign Up Link">
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:41.164" endtime="20191228 01:43:41.167"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<msg timestamp="20191228 01:43:41.252" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20191228 01:43:41.167" endtime="20191228 01:43:41.252"></status>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<doc>Clicks a link identified by ``locator``.</doc>
<arguments>
<arg>//a[@href="/signup"]</arg>
</arguments>
<msg timestamp="20191228 01:43:41.252" level="INFO">Clicking link '//a[@href="/signup"]'.</msg>
<status status="PASS" starttime="20191228 01:43:41.252" endtime="20191228 01:43:41.486"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:41.163" endtime="20191228 01:43:41.487"></status>
</kw>
<tags>
<tag>Desktop Firefox</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20191228 01:43:41.162" endtime="20191228 01:43:41.487" critical="yes"></status>
</test>
<test id="s1-s8-t2" name="Quickly check that the sign up page loaded.">
<kw name="Check The Sign Up Page">
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:41.490" endtime="20191228 01:43:41.493"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>${RETRY_AMOUNT}x</arg>
<arg>0.1s</arg>
<arg>Wait Until Page Contains</arg>
<arg>information</arg>
<arg>0.5s</arg>
</arguments>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on current page.</doc>
<arguments>
<arg>information</arg>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:41.493" endtime="20191228 01:43:41.504"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:41.493" endtime="20191228 01:43:41.504"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:41.505" endtime="20191228 01:43:41.508"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20191228 01:43:43.509" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20191228 01:43:41.508" endtime="20191228 01:43:43.509"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<msg timestamp="20191228 01:43:43.547" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20191228 01:43:43.510" endtime="20191228 01:43:43.547"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:41.489" endtime="20191228 01:43:43.547"></status>
</kw>
<tags>
<tag>Desktop Firefox</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20191228 01:43:41.488" endtime="20191228 01:43:43.547" critical="yes"></status>
</test>
<doc>Simple example using SeleniumLibrary.</doc>
<status status="PASS" starttime="20191228 01:43:36.265" endtime="20191228 01:43:44.262"></status>
</suite>
<suite id="s1-s9" name="Robot Framework test run with user-created Python Library in parallel">
<suite id="s1-s9-s1" name="Docker-Example-Python-Library1-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library1-Enhanced-Version.robot">
<test id="s1-s9-s1-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a PATCH request to &quot;title&quot; for jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Patch Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:51.056" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:50.699" endtime="20191228 01:43:51.056"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.056" endtime="20191228 01:43:51.057"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.058" endtime="20191228 01:43:51.058"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.059" endtime="20191228 01:43:51.059"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.059" endtime="20191228 01:43:51.060"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.060" endtime="20191228 01:43:51.061"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.061" endtime="20191228 01:43:51.062"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.062" endtime="20191228 01:43:51.063"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.063" endtime="20191228 01:43:51.064"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.064" endtime="20191228 01:43:51.065"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.066" endtime="20191228 01:43:51.066"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.066" endtime="20191228 01:43:51.067"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:51.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:51.067" endtime="20191228 01:43:51.068"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.068" endtime="20191228 01:43:51.069"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.070" endtime="20191228 01:43:51.070"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:51.069" endtime="20191228 01:43:51.070"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:50.697" endtime="20191228 01:43:51.070" critical="yes"></status>
</test>
<test id="s1-s9-s1-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a DELETE request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Delete Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:51.292" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:51.074" endtime="20191228 01:43:51.292"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.292" endtime="20191228 01:43:51.293"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.293" endtime="20191228 01:43:51.294"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.294" endtime="20191228 01:43:51.295"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.295" endtime="20191228 01:43:51.297"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.297" endtime="20191228 01:43:51.298"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.299" endtime="20191228 01:43:51.300"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.300" endtime="20191228 01:43:51.301"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:51.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:51.302" endtime="20191228 01:43:51.303"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20191228 01:43:51.303" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20191228 01:43:51.303" endtime="20191228 01:43:51.304"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.306" endtime="20191228 01:43:51.307"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:51.305" endtime="20191228 01:43:51.307"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:51.073" endtime="20191228 01:43:51.307" critical="yes"></status>
</test>
<test id="s1-s9-s1-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a POST request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Post Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:51.514" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:51.312" endtime="20191228 01:43:51.514"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.515" endtime="20191228 01:43:51.516"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.516" endtime="20191228 01:43:51.516"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.517" endtime="20191228 01:43:51.517"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.517" endtime="20191228 01:43:51.518"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.518" endtime="20191228 01:43:51.519"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.519" endtime="20191228 01:43:51.520"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.520" endtime="20191228 01:43:51.521"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.521" endtime="20191228 01:43:51.522"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.522" endtime="20191228 01:43:51.523"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.523" endtime="20191228 01:43:51.523"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.524" endtime="20191228 01:43:51.524"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191228 01:43:51.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:51.524" endtime="20191228 01:43:51.525"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.525" endtime="20191228 01:43:51.525"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20191228 01:43:51.526" level="INFO">${POST_RESPONSE_VALUES} = [101]</msg>
<status status="PASS" starttime="20191228 01:43:51.525" endtime="20191228 01:43:51.526"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[101]</arg>
</arguments>
<msg timestamp="20191228 01:43:51.526" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:51.526" endtime="20191228 01:43:51.526"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.528" endtime="20191228 01:43:51.528"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:51.526" endtime="20191228 01:43:51.528"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:51.310" endtime="20191228 01:43:51.528" critical="yes"></status>
</test>
<test id="s1-s9-s1-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a GET request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Get Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:51.640" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:51.531" endtime="20191228 01:43:51.640"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.640" endtime="20191228 01:43:51.641"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.641" endtime="20191228 01:43:51.642"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.642" endtime="20191228 01:43:51.643"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.643" endtime="20191228 01:43:51.644"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.644" endtime="20191228 01:43:51.645"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.646" endtime="20191228 01:43:51.647"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.647" endtime="20191228 01:43:51.649"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.649" endtime="20191228 01:43:51.652"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.653" endtime="20191228 01:43:51.654"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.655" endtime="20191228 01:43:51.656"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.657" endtime="20191228 01:43:51.658"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:51.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191228 01:43:51.660" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20191228 01:43:51.659" endtime="20191228 01:43:51.660"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191228 01:43:51.666" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20191228 01:43:51.673" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191228 01:43:51.877" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191228 01:43:51.665" endtime="20191228 01:43:51.877"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20191228 01:43:51.877" endtime="20191228 01:43:51.878"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:51.664" endtime="20191228 01:43:51.879"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:51.662" endtime="20191228 01:43:51.879"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:51.661" endtime="20191228 01:43:51.879"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:51.661" endtime="20191228 01:43:51.879"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20191228 01:43:51.529" endtime="20191228 01:43:51.879" critical="yes">200 == 200</status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites".</doc>
<status status="FAIL" starttime="20191228 01:43:50.489" endtime="20191228 01:43:51.885"></status>
</suite>
<suite id="s1-s9-s2" name="Docker-Example-Python-Library2-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library2-Enhanced-Version.robot">
<test id="s1-s9-s2-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Put Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:51.063" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:50.691" endtime="20191228 01:43:51.063"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.063" endtime="20191228 01:43:51.064"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.064" endtime="20191228 01:43:51.064"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.065" endtime="20191228 01:43:51.066"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.066" endtime="20191228 01:43:51.066"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.067" endtime="20191228 01:43:51.067"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.067" endtime="20191228 01:43:51.068"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.068" endtime="20191228 01:43:51.069"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.069" endtime="20191228 01:43:51.070"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.070" endtime="20191228 01:43:51.071"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.071" endtime="20191228 01:43:51.071"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.072" endtime="20191228 01:43:51.073"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:51.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:51.073" endtime="20191228 01:43:51.073"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.073" endtime="20191228 01:43:51.074"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20191228 01:43:51.075" level="INFO">${POST_RESPONSE_VALUES} = [2]</msg>
<status status="PASS" starttime="20191228 01:43:51.074" endtime="20191228 01:43:51.075"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[2]</arg>
</arguments>
<msg timestamp="20191228 01:43:51.075" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:51.075" endtime="20191228 01:43:51.075"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.076" endtime="20191228 01:43:51.076"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:51.075" endtime="20191228 01:43:51.076"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:50.689" endtime="20191228 01:43:51.076" critical="yes"></status>
</test>
<test id="s1-s9-s2-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PATCH request to &quot;body&quot; for jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Patch Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:51.292" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:51.080" endtime="20191228 01:43:51.292"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.292" endtime="20191228 01:43:51.293"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.293" endtime="20191228 01:43:51.293"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.294" endtime="20191228 01:43:51.294"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.295" endtime="20191228 01:43:51.296"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.296" endtime="20191228 01:43:51.297"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.297" endtime="20191228 01:43:51.298"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.299" endtime="20191228 01:43:51.300"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.301" endtime="20191228 01:43:51.302"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.302" endtime="20191228 01:43:51.303"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.303" endtime="20191228 01:43:51.304"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.305" endtime="20191228 01:43:51.306"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:51.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:51.307" endtime="20191228 01:43:51.308"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.309" endtime="20191228 01:43:51.310"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.311" endtime="20191228 01:43:51.311"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:51.310" endtime="20191228 01:43:51.311"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:51.078" endtime="20191228 01:43:51.311" critical="yes"></status>
</test>
<test id="s1-s9-s2-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a GET request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Get Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:51.373" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:51.315" endtime="20191228 01:43:51.373"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.373" endtime="20191228 01:43:51.374"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.374" endtime="20191228 01:43:51.374"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.374" endtime="20191228 01:43:51.375"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.375" endtime="20191228 01:43:51.376"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.376" endtime="20191228 01:43:51.376"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.377" endtime="20191228 01:43:51.377"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.377" endtime="20191228 01:43:51.378"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.378" endtime="20191228 01:43:51.378"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.379" endtime="20191228 01:43:51.379"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.379" endtime="20191228 01:43:51.380"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.380" endtime="20191228 01:43:51.380"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:51.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:51.381" endtime="20191228 01:43:51.381"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>qui est esse</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.381" endtime="20191228 01:43:51.383"></status>
</kw>
<kw name="Dictionary Should Not Contain Value" library="Collections">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.384" endtime="20191228 01:43:51.384"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.385" endtime="20191228 01:43:51.385"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:51.385" endtime="20191228 01:43:51.385"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:51.313" endtime="20191228 01:43:51.385" critical="yes"></status>
</test>
<test id="s1-s9-s2-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a DELETE request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Delete Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:51.616" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:51.388" endtime="20191228 01:43:51.616"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.617" endtime="20191228 01:43:51.617"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.617" endtime="20191228 01:43:51.618"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.618" endtime="20191228 01:43:51.619"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.619" endtime="20191228 01:43:51.620"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.620" endtime="20191228 01:43:51.620"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.620" endtime="20191228 01:43:51.621"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:51.621" endtime="20191228 01:43:51.622"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:51.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191228 01:43:51.623" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20191228 01:43:51.622" endtime="20191228 01:43:51.623"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191228 01:43:51.625" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20191228 01:43:51.629" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191228 01:43:51.931" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191228 01:43:51.625" endtime="20191228 01:43:51.932"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20191228 01:43:51.933" endtime="20191228 01:43:51.933"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:51.624" endtime="20191228 01:43:51.933"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:51.624" endtime="20191228 01:43:51.933"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:51.624" endtime="20191228 01:43:51.933"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:51.623" endtime="20191228 01:43:51.934"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20191228 01:43:51.386" endtime="20191228 01:43:51.934" critical="yes">200 == 200</status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites" option.</doc>
<status status="FAIL" starttime="20191228 01:43:50.486" endtime="20191228 01:43:51.937"></status>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 2 executions.</doc>
<metadata>
<item name="Randomized">Suites and tests (seed 5386802616416133076)</item>
</metadata>
<status status="FAIL" starttime="20191228 01:43:50.445" endtime="20191228 01:43:51.942"></status>
</suite>
<suite id="s1-s10" name="Robot Framework test run with user-created Python Library one test at a time in serial random order">
<suite id="s1-s10-s1" name="Docker-Example-Python-Library2-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library2-Enhanced-Version.robot">
<test id="s1-s10-s1-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a GET request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Get Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:58.790" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.750" endtime="20191228 01:43:58.790"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.790" endtime="20191228 01:43:58.791"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.791" endtime="20191228 01:43:58.792"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.793" endtime="20191228 01:43:58.793"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.793" endtime="20191228 01:43:58.793"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.793" endtime="20191228 01:43:58.794"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.794" endtime="20191228 01:43:58.794"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.794" endtime="20191228 01:43:58.795"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.795" endtime="20191228 01:43:58.795"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.795" endtime="20191228 01:43:58.796"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.796" endtime="20191228 01:43:58.796"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.796" endtime="20191228 01:43:58.796"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:58.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.796" endtime="20191228 01:43:58.797"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>qui est esse</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.797" endtime="20191228 01:43:58.797"></status>
</kw>
<kw name="Dictionary Should Not Contain Value" library="Collections">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.798" endtime="20191228 01:43:58.798"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.799" endtime="20191228 01:43:58.799"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:58.798" endtime="20191228 01:43:58.799"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:58.749" endtime="20191228 01:43:58.799" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test id="s1-s10-s1-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a DELETE request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Delete Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:59.416" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.800" endtime="20191228 01:43:59.416"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:59.416" endtime="20191228 01:43:59.416"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:59.416" endtime="20191228 01:43:59.417"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:59.417" endtime="20191228 01:43:59.417"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:59.417" endtime="20191228 01:43:59.417"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:59.418" endtime="20191228 01:43:59.418"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:59.418" endtime="20191228 01:43:59.419"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:59.419" endtime="20191228 01:43:59.419"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:59.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191228 01:43:59.420" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20191228 01:43:59.419" endtime="20191228 01:43:59.420"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191228 01:43:59.422" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20191228 01:43:59.427" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191228 01:43:59.731" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191228 01:43:59.422" endtime="20191228 01:43:59.731"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20191228 01:43:59.732" endtime="20191228 01:43:59.732"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:59.421" endtime="20191228 01:43:59.732"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:59.421" endtime="20191228 01:43:59.733"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:59.421" endtime="20191228 01:43:59.733"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:59.420" endtime="20191228 01:43:59.733"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20191228 01:43:58.799" endtime="20191228 01:43:59.733" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="fail"&gt;FAIL&lt;/span&gt;&lt;br&gt;New message: 200 == 200&lt;hr&gt;Old status: &lt;span class="fail"&gt;FAIL&lt;/span&gt;&lt;br&gt;Old message: 200 == 200</status>
</test>
<test id="s1-s10-s1-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PATCH request to &quot;body&quot; for jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Patch Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:58.740" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.508" endtime="20191228 01:43:58.740"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.741" endtime="20191228 01:43:58.741"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.741" endtime="20191228 01:43:58.741"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.741" endtime="20191228 01:43:58.742"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.742" endtime="20191228 01:43:58.742"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.742" endtime="20191228 01:43:58.743"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.743" endtime="20191228 01:43:58.743"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.743" endtime="20191228 01:43:58.743"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.744" endtime="20191228 01:43:58.744"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.744" endtime="20191228 01:43:58.744"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.744" endtime="20191228 01:43:58.745"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.745" endtime="20191228 01:43:58.745"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:58.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.746" endtime="20191228 01:43:58.746"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.746" endtime="20191228 01:43:58.747"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.748" endtime="20191228 01:43:58.748"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:58.747" endtime="20191228 01:43:58.748"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:58.506" endtime="20191228 01:43:58.748" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test id="s1-s10-s1-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Put Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:58.494" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.118" endtime="20191228 01:43:58.494"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.494" endtime="20191228 01:43:58.495"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.495" endtime="20191228 01:43:58.495"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.496" endtime="20191228 01:43:58.496"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.496" endtime="20191228 01:43:58.497"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.497" endtime="20191228 01:43:58.497"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.498" endtime="20191228 01:43:58.498"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.498" endtime="20191228 01:43:58.498"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.499" endtime="20191228 01:43:58.499"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.499" endtime="20191228 01:43:58.500"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.500" endtime="20191228 01:43:58.500"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.500" endtime="20191228 01:43:58.501"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:58.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.501" endtime="20191228 01:43:58.502"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.502" endtime="20191228 01:43:58.502"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20191228 01:43:58.503" level="INFO">${POST_RESPONSE_VALUES} = [2]</msg>
<status status="PASS" starttime="20191228 01:43:58.502" endtime="20191228 01:43:58.503"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[2]</arg>
</arguments>
<msg timestamp="20191228 01:43:58.503" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.503" endtime="20191228 01:43:58.503"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.505" endtime="20191228 01:43:58.505"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:58.504" endtime="20191228 01:43:58.505"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:58.117" endtime="20191228 01:43:58.505" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites" option.</doc>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1614"></status>
</suite>
<suite id="s1-s10-s2" name="Docker-Example-Python-Library1-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library1-Enhanced-Version.robot">
<test id="s1-s10-s2-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a PATCH request to &quot;title&quot; for jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Patch Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:57.379" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:57.149" endtime="20191228 01:43:57.379"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.379" endtime="20191228 01:43:57.379"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.379" endtime="20191228 01:43:57.380"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.380" endtime="20191228 01:43:57.380"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.381" endtime="20191228 01:43:57.381"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.381" endtime="20191228 01:43:57.382"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.382" endtime="20191228 01:43:57.382"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.382" endtime="20191228 01:43:57.383"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.383" endtime="20191228 01:43:57.384"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.384" endtime="20191228 01:43:57.384"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.384" endtime="20191228 01:43:57.385"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.385" endtime="20191228 01:43:57.385"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:57.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:57.385" endtime="20191228 01:43:57.386"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.386" endtime="20191228 01:43:57.386"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.387" endtime="20191228 01:43:57.387"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:57.386" endtime="20191228 01:43:57.387"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:57.147" endtime="20191228 01:43:57.387" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test id="s1-s10-s2-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a GET request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Get Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:57.429" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:57.388" endtime="20191228 01:43:57.429"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.429" endtime="20191228 01:43:57.430"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.430" endtime="20191228 01:43:57.431"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.431" endtime="20191228 01:43:57.431"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.432" endtime="20191228 01:43:57.432"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.432" endtime="20191228 01:43:57.433"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.433" endtime="20191228 01:43:57.433"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.433" endtime="20191228 01:43:57.434"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.434" endtime="20191228 01:43:57.434"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.434" endtime="20191228 01:43:57.435"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.435" endtime="20191228 01:43:57.435"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.435" endtime="20191228 01:43:57.435"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:57.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191228 01:43:57.437" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20191228 01:43:57.435" endtime="20191228 01:43:57.437"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191228 01:43:57.440" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20191228 01:43:57.444" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191228 01:43:57.748" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191228 01:43:57.439" endtime="20191228 01:43:57.748"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20191228 01:43:57.749" endtime="20191228 01:43:57.749"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:57.438" endtime="20191228 01:43:57.751"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:57.438" endtime="20191228 01:43:57.751"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:57.438" endtime="20191228 01:43:57.751"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:57.437" endtime="20191228 01:43:57.751"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20191228 01:43:57.387" endtime="20191228 01:43:57.751" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="fail"&gt;FAIL&lt;/span&gt;&lt;br&gt;New message: 200 == 200&lt;hr&gt;Old status: &lt;span class="fail"&gt;FAIL&lt;/span&gt;&lt;br&gt;Old message: 200 == 200</status>
</test>
<test id="s1-s10-s2-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a DELETE request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Delete Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:58.084" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:57.753" endtime="20191228 01:43:58.084"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.085" endtime="20191228 01:43:58.085"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.085" endtime="20191228 01:43:58.085"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.085" endtime="20191228 01:43:58.086"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.086" endtime="20191228 01:43:58.086"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.086" endtime="20191228 01:43:58.086"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.087" endtime="20191228 01:43:58.087"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.087" endtime="20191228 01:43:58.087"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:58.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.087" endtime="20191228 01:43:58.089"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20191228 01:43:58.089" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20191228 01:43:58.089" endtime="20191228 01:43:58.090"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.090" endtime="20191228 01:43:58.090"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:58.090" endtime="20191228 01:43:58.090"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:57.752" endtime="20191228 01:43:58.090" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test id="s1-s10-s2-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a POST request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Post Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:57.137" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:56.707" endtime="20191228 01:43:57.137"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.138" endtime="20191228 01:43:57.138"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.138" endtime="20191228 01:43:57.139"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.139" endtime="20191228 01:43:57.139"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.139" endtime="20191228 01:43:57.139"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.140" endtime="20191228 01:43:57.140"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.140" endtime="20191228 01:43:57.140"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.140" endtime="20191228 01:43:57.141"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.141" endtime="20191228 01:43:57.141"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.141" endtime="20191228 01:43:57.142"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.142" endtime="20191228 01:43:57.142"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.142" endtime="20191228 01:43:57.142"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191228 01:43:57.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:57.143" endtime="20191228 01:43:57.143"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.143" endtime="20191228 01:43:57.143"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20191228 01:43:57.144" level="INFO">${POST_RESPONSE_VALUES} = [101]</msg>
<status status="PASS" starttime="20191228 01:43:57.144" endtime="20191228 01:43:57.144"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[101]</arg>
</arguments>
<msg timestamp="20191228 01:43:57.144" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:57.144" endtime="20191228 01:43:57.144"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.145" endtime="20191228 01:43:57.145"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:57.145" endtime="20191228 01:43:57.145"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:56.705" endtime="20191228 01:43:57.145" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites".</doc>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1382"></status>
</suite>
<metadata>
<item name="Randomized">Suites and tests (seed 5200995079856263824)</item>
</metadata>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2996"></status>
</suite>
<suite id="s1-s11" name="Robot Framework test run with user-created Python Library one test at a time in serial random order">
<suite id="s1-s11-s1" name="Docker-Example-Python-Library1-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library1-Enhanced-Version.robot">
<test id="s1-s11-s1-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a POST request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Post Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:57.137" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:56.707" endtime="20191228 01:43:57.137"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.138" endtime="20191228 01:43:57.138"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.138" endtime="20191228 01:43:57.139"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.139" endtime="20191228 01:43:57.139"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.139" endtime="20191228 01:43:57.139"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.140" endtime="20191228 01:43:57.140"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.140" endtime="20191228 01:43:57.140"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.140" endtime="20191228 01:43:57.141"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.141" endtime="20191228 01:43:57.141"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.141" endtime="20191228 01:43:57.142"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.142" endtime="20191228 01:43:57.142"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.142" endtime="20191228 01:43:57.142"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20191228 01:43:57.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:57.143" endtime="20191228 01:43:57.143"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.143" endtime="20191228 01:43:57.143"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20191228 01:43:57.144" level="INFO">${POST_RESPONSE_VALUES} = [101]</msg>
<status status="PASS" starttime="20191228 01:43:57.144" endtime="20191228 01:43:57.144"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[101]</arg>
</arguments>
<msg timestamp="20191228 01:43:57.144" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:57.144" endtime="20191228 01:43:57.144"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.145" endtime="20191228 01:43:57.145"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:57.145" endtime="20191228 01:43:57.145"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:56.705" endtime="20191228 01:43:57.145" critical="yes"></status>
</test>
<test id="s1-s11-s1-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a PATCH request to &quot;title&quot; for jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Patch Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:57.379" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:57.149" endtime="20191228 01:43:57.379"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.379" endtime="20191228 01:43:57.379"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.379" endtime="20191228 01:43:57.380"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.380" endtime="20191228 01:43:57.380"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.381" endtime="20191228 01:43:57.381"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.381" endtime="20191228 01:43:57.382"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.382" endtime="20191228 01:43:57.382"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.382" endtime="20191228 01:43:57.383"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.383" endtime="20191228 01:43:57.384"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.384" endtime="20191228 01:43:57.384"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.384" endtime="20191228 01:43:57.385"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.385" endtime="20191228 01:43:57.385"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:57.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:57.385" endtime="20191228 01:43:57.386"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.386" endtime="20191228 01:43:57.386"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.387" endtime="20191228 01:43:57.387"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:57.386" endtime="20191228 01:43:57.387"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:57.147" endtime="20191228 01:43:57.387" critical="yes"></status>
</test>
<test id="s1-s11-s1-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a GET request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Get Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:57.429" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:57.388" endtime="20191228 01:43:57.429"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.429" endtime="20191228 01:43:57.430"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.430" endtime="20191228 01:43:57.431"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.431" endtime="20191228 01:43:57.431"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.432" endtime="20191228 01:43:57.432"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.432" endtime="20191228 01:43:57.433"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.433" endtime="20191228 01:43:57.433"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.433" endtime="20191228 01:43:57.434"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.434" endtime="20191228 01:43:57.434"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.434" endtime="20191228 01:43:57.435"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.435" endtime="20191228 01:43:57.435"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:57.435" endtime="20191228 01:43:57.435"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:57.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191228 01:43:57.437" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20191228 01:43:57.435" endtime="20191228 01:43:57.437"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191228 01:43:57.440" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20191228 01:43:57.444" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191228 01:43:57.748" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191228 01:43:57.439" endtime="20191228 01:43:57.748"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20191228 01:43:57.749" endtime="20191228 01:43:57.749"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:57.438" endtime="20191228 01:43:57.751"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:57.438" endtime="20191228 01:43:57.751"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:57.438" endtime="20191228 01:43:57.751"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:57.437" endtime="20191228 01:43:57.751"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20191228 01:43:57.387" endtime="20191228 01:43:57.751" critical="yes">200 == 200</status>
</test>
<test id="s1-s11-s1-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a DELETE request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Delete Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:58.084" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:57.753" endtime="20191228 01:43:58.084"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.085" endtime="20191228 01:43:58.085"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.085" endtime="20191228 01:43:58.085"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.085" endtime="20191228 01:43:58.086"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.086" endtime="20191228 01:43:58.086"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.086" endtime="20191228 01:43:58.086"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.087" endtime="20191228 01:43:58.087"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.087" endtime="20191228 01:43:58.087"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:58.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.087" endtime="20191228 01:43:58.089"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20191228 01:43:58.089" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20191228 01:43:58.089" endtime="20191228 01:43:58.090"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.090" endtime="20191228 01:43:58.090"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:58.090" endtime="20191228 01:43:58.090"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:57.752" endtime="20191228 01:43:58.090" critical="yes"></status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites".</doc>
<status status="FAIL" starttime="20191228 01:43:56.500" endtime="20191228 01:43:58.091"></status>
</suite>
<suite id="s1-s11-s2" name="Docker-Example-Python-Library2-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library2-Enhanced-Version.robot">
<test id="s1-s11-s2-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Put Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:58.494" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.118" endtime="20191228 01:43:58.494"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.494" endtime="20191228 01:43:58.495"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.495" endtime="20191228 01:43:58.495"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.496" endtime="20191228 01:43:58.496"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.496" endtime="20191228 01:43:58.497"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.497" endtime="20191228 01:43:58.497"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.498" endtime="20191228 01:43:58.498"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.498" endtime="20191228 01:43:58.498"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.499" endtime="20191228 01:43:58.499"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.499" endtime="20191228 01:43:58.500"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.500" endtime="20191228 01:43:58.500"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.500" endtime="20191228 01:43:58.501"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:58.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.501" endtime="20191228 01:43:58.502"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.502" endtime="20191228 01:43:58.502"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20191228 01:43:58.503" level="INFO">${POST_RESPONSE_VALUES} = [2]</msg>
<status status="PASS" starttime="20191228 01:43:58.502" endtime="20191228 01:43:58.503"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[2]</arg>
</arguments>
<msg timestamp="20191228 01:43:58.503" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.503" endtime="20191228 01:43:58.503"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.505" endtime="20191228 01:43:58.505"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:58.504" endtime="20191228 01:43:58.505"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:58.117" endtime="20191228 01:43:58.505" critical="yes"></status>
</test>
<test id="s1-s11-s2-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PATCH request to &quot;body&quot; for jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Patch Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:58.740" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.508" endtime="20191228 01:43:58.740"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.741" endtime="20191228 01:43:58.741"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.741" endtime="20191228 01:43:58.741"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.741" endtime="20191228 01:43:58.742"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.742" endtime="20191228 01:43:58.742"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.742" endtime="20191228 01:43:58.743"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.743" endtime="20191228 01:43:58.743"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.743" endtime="20191228 01:43:58.743"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.744" endtime="20191228 01:43:58.744"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.744" endtime="20191228 01:43:58.744"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.744" endtime="20191228 01:43:58.745"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.745" endtime="20191228 01:43:58.745"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:58.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.746" endtime="20191228 01:43:58.746"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.746" endtime="20191228 01:43:58.747"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.748" endtime="20191228 01:43:58.748"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:58.747" endtime="20191228 01:43:58.748"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:58.506" endtime="20191228 01:43:58.748" critical="yes"></status>
</test>
<test id="s1-s11-s2-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a GET request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Get Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:58.790" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.750" endtime="20191228 01:43:58.790"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.790" endtime="20191228 01:43:58.791"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.791" endtime="20191228 01:43:58.792"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.793" endtime="20191228 01:43:58.793"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.793" endtime="20191228 01:43:58.793"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.793" endtime="20191228 01:43:58.794"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.794" endtime="20191228 01:43:58.794"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.794" endtime="20191228 01:43:58.795"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.795" endtime="20191228 01:43:58.795"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.795" endtime="20191228 01:43:58.796"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.796" endtime="20191228 01:43:58.796"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.796" endtime="20191228 01:43:58.796"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:58.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.796" endtime="20191228 01:43:58.797"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>qui est esse</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.797" endtime="20191228 01:43:58.797"></status>
</kw>
<kw name="Dictionary Should Not Contain Value" library="Collections">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.798" endtime="20191228 01:43:58.798"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:58.799" endtime="20191228 01:43:58.799"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:58.798" endtime="20191228 01:43:58.799"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20191228 01:43:58.749" endtime="20191228 01:43:58.799" critical="yes"></status>
</test>
<test id="s1-s11-s2-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a DELETE request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Delete Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20191228 01:43:59.416" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20191228 01:43:58.800" endtime="20191228 01:43:59.416"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:59.416" endtime="20191228 01:43:59.416"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:59.416" endtime="20191228 01:43:59.417"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:59.417" endtime="20191228 01:43:59.417"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:59.417" endtime="20191228 01:43:59.417"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:59.418" endtime="20191228 01:43:59.418"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:59.418" endtime="20191228 01:43:59.419"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20191228 01:43:59.419" endtime="20191228 01:43:59.419"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20191228 01:43:59.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191228 01:43:59.420" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20191228 01:43:59.419" endtime="20191228 01:43:59.420"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20191228 01:43:59.422" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20191228 01:43:59.427" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191228 01:43:59.731" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191228 01:43:59.422" endtime="20191228 01:43:59.731"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20191228 01:43:59.732" endtime="20191228 01:43:59.732"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:59.421" endtime="20191228 01:43:59.732"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:59.421" endtime="20191228 01:43:59.733"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:59.421" endtime="20191228 01:43:59.733"></status>
</kw>
<status status="PASS" starttime="20191228 01:43:59.420" endtime="20191228 01:43:59.733"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20191228 01:43:58.799" endtime="20191228 01:43:59.733" critical="yes">200 == 200</status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites" option.</doc>
<status status="FAIL" starttime="20191228 01:43:58.093" endtime="20191228 01:43:59.734"></status>
</suite>
<status status="FAIL" starttime="20191228 01:43:56.469" endtime="20191228 01:43:59.736"></status>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="19108"></status>
</suite>
<statistics>
<total>
<stat pass="33" fail="6">Critical Tests</stat>
<stat pass="33" fail="6">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0">Check_One</stat>
<stat pass="2" fail="0">Check_Three</stat>
<stat pass="2" fail="0">Check_Two</stat>
<stat pass="2" fail="0">Desktop Firefox</stat>
<stat pass="2" fail="0">Group_One</stat>
<stat pass="2" fail="0">Group_Three</stat>
<stat pass="2" fail="0">Group_Two</stat>
<stat pass="18" fail="6">Regression_Tests</stat>
<stat pass="18" fail="6">Slightly_Refined_And_Room_For_Enhancements</stat>
<stat pass="1" fail="0">Start</stat>
</tag>
<suite>
<stat pass="33" fail="6" id="s1" name="Leon Robot Framework Assistant Combined Results Dashboard">Leon Robot Framework Assistant Combined Results Dashboard</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
