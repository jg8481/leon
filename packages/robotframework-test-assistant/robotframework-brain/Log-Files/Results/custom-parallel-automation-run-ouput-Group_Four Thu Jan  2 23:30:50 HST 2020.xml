<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 3.1.2 (Python 3.7.5 on darwin)" generated="20200109 00:40:33.225" rpa="false">
<suite id="s1" name="Leon Robot Framework Assistant Combined Results Dashboard">
<suite id="s1-s1" name="Group_One Thu Jan  2 23:30:48 HST 2020">
<suite id="s1-s1-s1" name="Leon-Robot-Framework-Customizable-Parallel-Runner1" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner1.robot">
<test id="s1-s1-s1-t1" name="AUTOMATED CHECK 1 - PARALLEL RUNNER 1 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20200102 23:30:49.147" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20200102 23:30:49.147" endtime="20200102 23:30:49.147"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 1 - A hypothetical automated check - PARALLEL RUNNER 1</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200102 23:30:49.148" level="INFO">Starting process:
echo "AUTOMATED CHECK 1 - A hypothetical automated check - PARALLEL RUNNER 1 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20200102 23:30:49.152" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200102 23:30:49.869" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200102 23:30:49.147" endtime="20200102 23:30:49.869"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:49.147" endtime="20200102 23:30:49.869"></status>
</kw>
<tags>
<tag>Group_One</tag>
</tags>
<status status="PASS" starttime="20200102 23:30:49.146" endtime="20200102 23:30:49.869" critical="yes"></status>
</test>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="723"></status>
</suite>
<suite id="s1-s1-s2" name="Leon-Robot-Framework-Customizable-Parallel-Runner2" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner2.robot">
<test id="s1-s1-s2-t1" name="AUTOMATED CHECK 1 - PARALLEL RUNNER 2 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20200102 23:30:49.148" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20200102 23:30:49.147" endtime="20200102 23:30:49.148"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 1 - A hypothetical automated check - PARALLEL RUNNER 2</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200102 23:30:49.149" level="INFO">Starting process:
echo "AUTOMATED CHECK 1 - A hypothetical automated check - PARALLEL RUNNER 2 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20200102 23:30:49.153" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200102 23:30:49.869" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200102 23:30:49.148" endtime="20200102 23:30:49.869"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:49.148" endtime="20200102 23:30:49.869"></status>
</kw>
<tags>
<tag>Group_One</tag>
</tags>
<status status="PASS" starttime="20200102 23:30:49.147" endtime="20200102 23:30:49.870" critical="yes"></status>
</test>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="723"></status>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 2 executions.</doc>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="1446"></status>
</suite>
<suite id="s1-s2" name="Group_Three Thu Jan  2 23:30:53 HST 2020">
<suite id="s1-s2-s1" name="Leon-Robot-Framework-Customizable-Parallel-Runner1" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner1.robot">
<test id="s1-s2-s1-t1" name="AUTOMATED CHECK 3 - PARALLEL RUNNER 1 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20200102 23:30:53.902" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20200102 23:30:53.901" endtime="20200102 23:30:53.902"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 3 - A hypothetical automated check - PARALLEL RUNNER 1</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200102 23:30:53.903" level="INFO">Starting process:
echo "AUTOMATED CHECK 3 - A hypothetical automated check - PARALLEL RUNNER 1 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20200102 23:30:53.908" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200102 23:30:54.529" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200102 23:30:53.903" endtime="20200102 23:30:54.530"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:53.902" endtime="20200102 23:30:54.530"></status>
</kw>
<tags>
<tag>Group_Three</tag>
</tags>
<status status="PASS" starttime="20200102 23:30:53.900" endtime="20200102 23:30:54.530" critical="yes"></status>
</test>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="630"></status>
</suite>
<suite id="s1-s2-s2" name="Leon-Robot-Framework-Customizable-Parallel-Runner2" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner2.robot">
<test id="s1-s2-s2-t1" name="AUTOMATED CHECK 3 - PARALLEL RUNNER 2 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20200102 23:30:53.902" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20200102 23:30:53.901" endtime="20200102 23:30:53.902"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 3 - A hypothetical automated check - PARALLEL RUNNER 2</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200102 23:30:53.903" level="INFO">Starting process:
echo "AUTOMATED CHECK 3 - A hypothetical automated check - PARALLEL RUNNER 2 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20200102 23:30:53.908" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200102 23:30:54.529" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200102 23:30:53.903" endtime="20200102 23:30:54.530"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:53.902" endtime="20200102 23:30:54.530"></status>
</kw>
<tags>
<tag>Group_Three</tag>
</tags>
<status status="PASS" starttime="20200102 23:30:53.900" endtime="20200102 23:30:54.530" critical="yes"></status>
</test>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="630"></status>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 2 executions.</doc>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="1260"></status>
</suite>
<suite id="s1-s3" name="Group_Two Thu Jan  2 23:30:44 HST 2020">
<suite id="s1-s3-s1" name="Leon-Robot-Framework-Customizable-Parallel-Runner1" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner1.robot">
<test id="s1-s3-s1-t1" name="AUTOMATED CHECK 2 - PARALLEL RUNNER 1 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20200102 23:30:45.659" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20200102 23:30:45.659" endtime="20200102 23:30:45.660"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 2 - A hypothetical automated check - PARALLEL RUNNER 1</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200102 23:30:45.661" level="INFO">Starting process:
echo "AUTOMATED CHECK 2 - A hypothetical automated check - PARALLEL RUNNER 1 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20200102 23:30:45.664" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200102 23:30:47.284" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200102 23:30:45.660" endtime="20200102 23:30:47.284"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:45.660" endtime="20200102 23:30:47.284"></status>
</kw>
<tags>
<tag>Group_Two</tag>
</tags>
<status status="PASS" starttime="20200102 23:30:45.659" endtime="20200102 23:30:47.285" critical="yes"></status>
</test>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="1626"></status>
</suite>
<suite id="s1-s3-s2" name="Leon-Robot-Framework-Customizable-Parallel-Runner2" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Parallel-Runner2.robot">
<test id="s1-s3-s2-t1" name="AUTOMATED CHECK 2 - PARALLEL RUNNER 2 : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20200102 23:30:45.658" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20200102 23:30:45.657" endtime="20200102 23:30:45.658"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 2 - A hypothetical automated check - PARALLEL RUNNER 2</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200102 23:30:45.658" level="INFO">Starting process:
echo "AUTOMATED CHECK 2 - A hypothetical automated check - PARALLEL RUNNER 2 ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20200102 23:30:45.663" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200102 23:30:47.599" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200102 23:30:45.658" endtime="20200102 23:30:47.600"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:45.658" endtime="20200102 23:30:47.600"></status>
</kw>
<tags>
<tag>Group_Two</tag>
</tags>
<status status="PASS" starttime="20200102 23:30:45.657" endtime="20200102 23:30:47.600" critical="yes"></status>
</test>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="1943"></status>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 2 executions.</doc>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="3569"></status>
</suite>
<suite id="s1-s4" name="Robot Framework automation run in a manually constructed sequence set up through leon-ai with a CustomSerialAutomationRunnerFile.csv file">
<suite id="s1-s4-s1" name="Check_One Thu Jan  2 23:29:50 HST 2020" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s4-s1-t1" name="AUTOMATED CHECK 1 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20200102 23:29:50.919" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20200102 23:29:50.919" endtime="20200102 23:29:50.919"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 1 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200102 23:29:50.920" level="INFO">Starting process:
echo "AUTOMATED CHECK 1 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20200102 23:29:50.925" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200102 23:29:52.254" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200102 23:29:50.919" endtime="20200102 23:29:52.254"></status>
</kw>
<status status="PASS" starttime="20200102 23:29:50.919" endtime="20200102 23:29:52.254"></status>
</kw>
<tags>
<tag>Check_One</tag>
</tags>
<status status="PASS" starttime="20200102 23:29:50.918" endtime="20200102 23:29:52.255" critical="yes"></status>
</test>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="1337"></status>
</suite>
<suite id="s1-s4-s2" name="Check_Three Thu Jan  2 23:29:43 HST 2020" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s4-s2-t1" name="AUTOMATED CHECK 3 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20200102 23:29:44.230" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20200102 23:29:44.229" endtime="20200102 23:29:44.230"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 3 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200102 23:29:44.231" level="INFO">Starting process:
echo "AUTOMATED CHECK 3 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20200102 23:29:44.236" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200102 23:29:44.948" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200102 23:29:44.230" endtime="20200102 23:29:44.948"></status>
</kw>
<status status="PASS" starttime="20200102 23:29:44.230" endtime="20200102 23:29:44.948"></status>
</kw>
<tags>
<tag>Check_Three</tag>
</tags>
<status status="PASS" starttime="20200102 23:29:44.229" endtime="20200102 23:29:44.948" critical="yes"></status>
</test>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="719"></status>
</suite>
<suite id="s1-s4-s3" name="Check_Two Thu Jan  2 23:29:45 HST 2020" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s4-s3-t1" name="AUTOMATED CHECK 2 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20200102 23:29:45.813" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20200102 23:29:45.813" endtime="20200102 23:29:45.813"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 2 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200102 23:29:45.814" level="INFO">Starting process:
echo "AUTOMATED CHECK 2 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20200102 23:29:45.818" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200102 23:29:46.530" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200102 23:29:45.814" endtime="20200102 23:29:46.531"></status>
</kw>
<status status="PASS" starttime="20200102 23:29:45.813" endtime="20200102 23:29:46.531"></status>
</kw>
<tags>
<tag>Check_Two</tag>
</tags>
<status status="PASS" starttime="20200102 23:29:45.812" endtime="20200102 23:29:46.532" critical="yes"></status>
</test>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="720"></status>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="2776"></status>
</suite>
<suite id="s1-s5" name="Check_One Thu Jan  2 23:29:50 HST 2020" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s5-t1" name="AUTOMATED CHECK 1 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20200102 23:29:50.919" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20200102 23:29:50.919" endtime="20200102 23:29:50.919"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 1 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200102 23:29:50.920" level="INFO">Starting process:
echo "AUTOMATED CHECK 1 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20200102 23:29:50.925" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200102 23:29:52.254" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200102 23:29:50.919" endtime="20200102 23:29:52.254"></status>
</kw>
<status status="PASS" starttime="20200102 23:29:50.919" endtime="20200102 23:29:52.254"></status>
</kw>
<tags>
<tag>Check_One</tag>
</tags>
<status status="PASS" starttime="20200102 23:29:50.918" endtime="20200102 23:29:52.255" critical="yes"></status>
</test>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="1337"></status>
</suite>
<suite id="s1-s6" name="Check_Three Thu Jan  2 23:29:43 HST 2020" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s6-t1" name="AUTOMATED CHECK 3 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20200102 23:29:44.230" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20200102 23:29:44.229" endtime="20200102 23:29:44.230"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 3 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200102 23:29:44.231" level="INFO">Starting process:
echo "AUTOMATED CHECK 3 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20200102 23:29:44.236" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200102 23:29:44.948" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200102 23:29:44.230" endtime="20200102 23:29:44.948"></status>
</kw>
<status status="PASS" starttime="20200102 23:29:44.230" endtime="20200102 23:29:44.948"></status>
</kw>
<tags>
<tag>Check_Three</tag>
</tags>
<status status="PASS" starttime="20200102 23:29:44.229" endtime="20200102 23:29:44.948" critical="yes"></status>
</test>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="719"></status>
</suite>
<suite id="s1-s7" name="Check_Two Thu Jan  2 23:29:45 HST 2020" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Robot-Files/Leon-Robot-Framework-Customizable-Serial-Runner.robot">
<test id="s1-s7-t1" name="AUTOMATED CHECK 2 - SERIAL RUNNER : An automated check that will run.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Just giving Robot Framework something to do when triggered by the voice assistant.</arg>
</arguments>
<msg timestamp="20200102 23:29:45.813" level="INFO">Just giving Robot Framework something to do when triggered by the voice assistant.</msg>
<status status="PASS" starttime="20200102 23:29:45.813" endtime="20200102 23:29:45.813"></status>
</kw>
<kw name="Send Short Message Through Slack About The Automation Run">
<arguments>
<arg>AUTOMATED CHECK 2 - A hypothetical automated check - SERIAL RUNNER</arg>
<arg>QA</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "${TEST_NAME} ran in the ${TEST_ENVIRONMENT} environment..." | slacktee.sh -i :nerd_face: --plain-text --config ${SLACK_CONFIG_PATH}</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200102 23:29:45.814" level="INFO">Starting process:
echo "AUTOMATED CHECK 2 - A hypothetical automated check - SERIAL RUNNER ran in the QA environment..." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20200102 23:29:45.818" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200102 23:29:46.530" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200102 23:29:45.814" endtime="20200102 23:29:46.531"></status>
</kw>
<status status="PASS" starttime="20200102 23:29:45.813" endtime="20200102 23:29:46.531"></status>
</kw>
<tags>
<tag>Check_Two</tag>
</tags>
<status status="PASS" starttime="20200102 23:29:45.812" endtime="20200102 23:29:46.532" critical="yes"></status>
</test>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="720"></status>
</suite>
<suite id="s1-s8" name="Robot Framework Desktop Web Browser Test Run">
<suite id="s1-s8-s1" name="Desktop-Example-Chrome" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Tests/Workshop-Part-Two/Desktop-Example-Chrome.robot">
<kw name="Open Chrome Browser To Specified URL" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20200102 23:30:07.376" level="INFO">Opening browser 'Chrome' to base url 'https://owasp-goat-app.herokuapp.com/login'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200102 23:30:07.390" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<status status="PASS" starttime="20200102 23:30:07.389" endtime="20200102 23:30:07.390"></status>
</kw>
<msg timestamp="20200102 23:30:07.396" level="FAIL">WebDriverException: Message: 'chromedriver' executable may have wrong permissions. Please see https://sites.google.com/a/chromium.org/chromedriver/home
</msg>
<status status="FAIL" starttime="20200102 23:30:07.376" endtime="20200102 23:30:07.396"></status>
</kw>
<status status="FAIL" starttime="20200102 23:30:07.375" endtime="20200102 23:30:07.397"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="teardown">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200102 23:30:07.400" endtime="20200102 23:30:07.400"></status>
</kw>
<test id="s1-s8-s1-t1" name="Go to the sign up page from the login page.">
<tags>
<tag>Desktop Chrome</tag>
</tags>
<status status="FAIL" starttime="20200102 23:30:07.397" endtime="20200102 23:30:07.398" critical="yes">Parent suite setup failed:
WebDriverException: Message: 'chromedriver' executable may have wrong permissions. Please see https://sites.google.com/a/chromium.org/chromedriver/home
</status>
</test>
<test id="s1-s8-s1-t2" name="Quickly check that the sign up page loaded.">
<tags>
<tag>Desktop Chrome</tag>
</tags>
<status status="FAIL" starttime="20200102 23:30:07.399" endtime="20200102 23:30:07.399" critical="yes">Parent suite setup failed:
WebDriverException: Message: 'chromedriver' executable may have wrong permissions. Please see https://sites.google.com/a/chromium.org/chromedriver/home
</status>
</test>
<doc>Simple example using SeleniumLibrary.</doc>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="23">Suite setup failed:
WebDriverException: Message: 'chromedriver' executable may have wrong permissions. Please see https://sites.google.com/a/chromium.org/chromedriver/home
</status>
</suite>
<suite id="s1-s8-s2" name="Desktop-Example-Firefox" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Tests/Workshop-Part-Two/Desktop-Example-Firefox.robot">
<kw name="Open Firefox Browser To Specified URL" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20200102 23:30:07.375" level="INFO">Opening browser 'Firefox' to base url 'https://owasp-goat-app.herokuapp.com/login'.</msg>
<msg timestamp="20200102 23:30:07.376" level="INFO">Firefox driver log is always forced to to: /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Workshop-Part-Three/pabot_results/Robot Framework Desktop Web Browser Test Run.Desktop-Example-Firefox/geckodriver-1.log</msg>
<status status="PASS" starttime="20200102 23:30:07.375" endtime="20200102 23:30:19.441"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20200102 23:30:19.441" endtime="20200102 23:30:19.444"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>${RETRY_AMOUNT}x</arg>
<arg>0.1s</arg>
<arg>Wait Until Page Contains</arg>
<arg>Password</arg>
<arg>0.5s</arg>
</arguments>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on the current page.</doc>
<arguments>
<arg>Password</arg>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200102 23:30:19.445" endtime="20200102 23:30:19.458"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:19.445" endtime="20200102 23:30:19.458"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20200102 23:30:19.458" endtime="20200102 23:30:19.461"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200102 23:30:21.463" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200102 23:30:19.462" endtime="20200102 23:30:21.463"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200102 23:30:21.604" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Firefox-selenium-screenshot-1.png"&gt;&lt;img src="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Firefox-selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200102 23:30:21.463" endtime="20200102 23:30:21.604"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:07.375" endtime="20200102 23:30:21.604"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="teardown">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200102 23:30:24.369" endtime="20200102 23:30:25.986"></status>
</kw>
<test id="s1-s8-s2-t1" name="Go to the sign up page from the login page.">
<kw name="Click Sign Up Link" library="Selenium-Desktop-Resources">
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20200102 23:30:21.606" endtime="20200102 23:30:21.609"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200102 23:30:21.736" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Firefox-selenium-screenshot-2.png"&gt;&lt;img src="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Firefox-selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200102 23:30:21.609" endtime="20200102 23:30:21.736"></status>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<doc>Clicks a link identified by ``locator``.</doc>
<arguments>
<arg>//a[@href="/signup"]</arg>
</arguments>
<msg timestamp="20200102 23:30:21.737" level="INFO">Clicking link '//a[@href="/signup"]'.</msg>
<status status="PASS" starttime="20200102 23:30:21.736" endtime="20200102 23:30:22.162"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:21.605" endtime="20200102 23:30:22.162"></status>
</kw>
<tags>
<tag>Desktop Firefox</tag>
</tags>
<status status="PASS" starttime="20200102 23:30:21.604" endtime="20200102 23:30:22.162" critical="yes"></status>
</test>
<test id="s1-s8-s2-t2" name="Quickly check that the sign up page loaded.">
<kw name="Check The Sign Up Page" library="Selenium-Desktop-Resources">
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20200102 23:30:22.166" endtime="20200102 23:30:22.170"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>${RETRY_AMOUNT}x</arg>
<arg>0.1 sec</arg>
<arg>Wait Until Page Contains</arg>
<arg>information</arg>
<arg>0.5s</arg>
</arguments>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on the current page.</doc>
<arguments>
<arg>information</arg>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200102 23:30:22.171" endtime="20200102 23:30:22.213"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:22.170" endtime="20200102 23:30:22.213"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20200102 23:30:22.214" endtime="20200102 23:30:22.223"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200102 23:30:24.224" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200102 23:30:22.223" endtime="20200102 23:30:24.224"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200102 23:30:24.368" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Firefox-selenium-screenshot-3.png"&gt;&lt;img src="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Firefox-selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200102 23:30:24.224" endtime="20200102 23:30:24.368"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:22.164" endtime="20200102 23:30:24.368"></status>
</kw>
<tags>
<tag>Desktop Firefox</tag>
</tags>
<status status="PASS" starttime="20200102 23:30:22.163" endtime="20200102 23:30:24.368" critical="yes"></status>
</test>
<doc>Simple example using SeleniumLibrary.</doc>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="18609"></status>
</suite>
<suite id="s1-s8-s3" name="Desktop-Example-Safari" source="/Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Tests/Workshop-Part-Two/Desktop-Example-Safari.robot">
<kw name="Open Safari Browser To Specified URL" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20200102 23:30:07.392" level="INFO">Opening browser 'Safari' to base url 'https://owasp-goat-app.herokuapp.com/login'.</msg>
<status status="PASS" starttime="20200102 23:30:07.392" endtime="20200102 23:30:20.136"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20200102 23:30:20.139" endtime="20200102 23:30:20.144"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>${RETRY_AMOUNT}x</arg>
<arg>0.1s</arg>
<arg>Wait Until Page Contains</arg>
<arg>Password</arg>
<arg>0.5s</arg>
</arguments>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on the current page.</doc>
<arguments>
<arg>Password</arg>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200102 23:30:20.145" endtime="20200102 23:30:20.158"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:20.144" endtime="20200102 23:30:20.158"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20200102 23:30:20.159" endtime="20200102 23:30:20.160"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200102 23:30:22.161" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200102 23:30:20.161" endtime="20200102 23:30:22.161"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200102 23:30:22.233" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Safari-selenium-screenshot-1.png"&gt;&lt;img src="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Safari-selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200102 23:30:22.162" endtime="20200102 23:30:22.233"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:07.392" endtime="20200102 23:30:22.234"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="teardown">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200102 23:30:42.980" endtime="20200102 23:30:42.999"></status>
</kw>
<test id="s1-s8-s3-t1" name="Go to the sign up page from the login page.">
<kw name="Click Sign Up Link" library="Selenium-Desktop-Resources">
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20200102 23:30:22.235" endtime="20200102 23:30:22.237"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200102 23:30:22.287" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Safari-selenium-screenshot-2.png"&gt;&lt;img src="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Safari-selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200102 23:30:22.237" endtime="20200102 23:30:22.287"></status>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<doc>Clicks a link identified by ``locator``.</doc>
<arguments>
<arg>//a[@href="/signup"]</arg>
</arguments>
<msg timestamp="20200102 23:30:22.288" level="INFO">Clicking link '//a[@href="/signup"]'.</msg>
<status status="PASS" starttime="20200102 23:30:22.288" endtime="20200102 23:30:22.313"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:22.234" endtime="20200102 23:30:22.313"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200102 23:30:22.313" endtime="20200102 23:30:22.314"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:22.313" endtime="20200102 23:30:22.314"></status>
</kw>
<tags>
<tag>Desktop Safari</tag>
</tags>
<status status="PASS" starttime="20200102 23:30:22.234" endtime="20200102 23:30:22.314" critical="yes"></status>
</test>
<test id="s1-s8-s3-t2" name="Quickly check that the sign up page loaded.">
<kw name="Check The Sign Up Page Demonstrate Failure">
<kw name="Page Should Contain" library="SeleniumLibrary">
<doc>Verifies that current page contains ``text``.</doc>
<arguments>
<arg>THIS SHOULD FAIL</arg>
</arguments>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200102 23:30:42.350" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Safari-selenium-screenshot-3.png"&gt;&lt;img src="Robot Framework Desktop Web Browser Test Run.Desktop-Example-Safari-selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200102 23:30:42.300" endtime="20200102 23:30:42.350"></status>
</kw>
<msg timestamp="20200102 23:30:42.354" level="FAIL">Page should have contained text 'THIS SHOULD FAIL' but did not.</msg>
<status status="FAIL" starttime="20200102 23:30:22.315" endtime="20200102 23:30:42.354"></status>
</kw>
<status status="FAIL" starttime="20200102 23:30:22.315" endtime="20200102 23:30:42.354"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email For Desktop Browser Check">
<arguments>
<arg>desktop Safari checks in the Desktop-Safari.robot file</arg>
<arg>Prod</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config ${EXECDIR}/Workshop-Examples/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200102 23:30:42.357" level="INFO">Starting process:
echo "The desktop Safari checks in the Desktop-Safari.robot file failed in the Prod environment." | slacktee.sh -i :nerd_face: --plain-text --config /Users/jgorospe/Documents/GitHub/leon/packages/robotframework-test-assistant/robotframework-brain/Tool-Strategies-Lone-Testers-Test-Leadership-Congress-2019/Workshop-Examples/Shared-Resources/.slacktee</msg>
<msg timestamp="20200102 23:30:42.361" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200102 23:30:42.977" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200102 23:30:42.356" endtime="20200102 23:30:42.978"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20200102 23:30:42.978" endtime="20200102 23:30:42.978"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:42.356" endtime="20200102 23:30:42.979"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:42.356" endtime="20200102 23:30:42.979"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:42.355" endtime="20200102 23:30:42.979"></status>
</kw>
<status status="PASS" starttime="20200102 23:30:42.355" endtime="20200102 23:30:42.979"></status>
</kw>
<tags>
<tag>Desktop Safari</tag>
</tags>
<status status="FAIL" starttime="20200102 23:30:22.314" endtime="20200102 23:30:42.979" critical="yes">Page should have contained text 'THIS SHOULD FAIL' but did not.</status>
</test>
<doc>Simple example using SeleniumLibrary.</doc>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="35606"></status>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 3 executions.</doc>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="54238"></status>
</suite>
<suite id="s1-s9" name="Robot Framework Web Browser In Docker Container Test Run" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Firefox.robot">
<kw name="Open Firefox Browser To Specified URL" type="setup">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Close All Browsers</arg>
</arguments>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20200101 03:50:11.985" endtime="20200101 03:50:11.985"></status>
</kw>
<status status="PASS" starttime="20200101 03:50:11.985" endtime="20200101 03:50:11.985"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20200101 03:50:11.986" level="INFO">Opening browser 'Firefox' to base url 'https://owasp-goat-app.herokuapp.com/login'.</msg>
<status status="PASS" starttime="20200101 03:50:11.986" endtime="20200101 03:50:14.645"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:50:14.646" endtime="20200101 03:50:14.652"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>${RETRY_AMOUNT}x</arg>
<arg>0.1s</arg>
<arg>Wait Until Page Contains</arg>
<arg>Password</arg>
<arg>0.25s</arg>
</arguments>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on current page.</doc>
<arguments>
<arg>Password</arg>
<arg>0.25s</arg>
</arguments>
<status status="PASS" starttime="20200101 03:50:14.652" endtime="20200101 03:50:14.671"></status>
</kw>
<status status="PASS" starttime="20200101 03:50:14.652" endtime="20200101 03:50:14.671"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:50:14.671" endtime="20200101 03:50:14.675"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200101 03:50:16.678" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200101 03:50:14.676" endtime="20200101 03:50:16.679"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<msg timestamp="20200101 03:50:16.717" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200101 03:50:16.679" endtime="20200101 03:50:16.717"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20200101 03:50:11.984" endtime="20200101 03:50:16.718"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="teardown">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200101 03:50:19.174" endtime="20200101 03:50:20.935"></status>
</kw>
<test id="s1-s9-t1" name="Go to the sign up page from the login page.">
<kw name="Click Sign Up Link">
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:50:16.719" endtime="20200101 03:50:16.722"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<msg timestamp="20200101 03:50:16.804" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200101 03:50:16.723" endtime="20200101 03:50:16.805"></status>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<doc>Clicks a link identified by ``locator``.</doc>
<arguments>
<arg>//a[@href="/signup"]</arg>
</arguments>
<msg timestamp="20200101 03:50:16.805" level="INFO">Clicking link '//a[@href="/signup"]'.</msg>
<status status="PASS" starttime="20200101 03:50:16.805" endtime="20200101 03:50:17.075"></status>
</kw>
<status status="PASS" starttime="20200101 03:50:16.719" endtime="20200101 03:50:17.075"></status>
</kw>
<tags>
<tag>Desktop Firefox</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20200101 03:50:16.718" endtime="20200101 03:50:17.075" critical="yes"></status>
</test>
<test id="s1-s9-t2" name="Quickly check that the sign up page loaded.">
<kw name="Check The Sign Up Page">
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:50:17.078" endtime="20200101 03:50:17.084"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>${RETRY_AMOUNT}x</arg>
<arg>0.1s</arg>
<arg>Wait Until Page Contains</arg>
<arg>information</arg>
<arg>0.5s</arg>
</arguments>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on current page.</doc>
<arguments>
<arg>information</arg>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200101 03:50:17.085" endtime="20200101 03:50:17.131"></status>
</kw>
<status status="PASS" starttime="20200101 03:50:17.085" endtime="20200101 03:50:17.131"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>${SELENIUM_IMPLICIT_WAIT}</arg>
</arguments>
<status status="PASS" starttime="20200101 03:50:17.131" endtime="20200101 03:50:17.136"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200101 03:50:19.137" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200101 03:50:17.136" endtime="20200101 03:50:19.137"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<msg timestamp="20200101 03:50:19.173" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200101 03:50:19.138" endtime="20200101 03:50:19.173"></status>
</kw>
<status status="PASS" starttime="20200101 03:50:17.077" endtime="20200101 03:50:19.173"></status>
</kw>
<tags>
<tag>Desktop Firefox</tag>
</tags>
<timeout value="1 minute"></timeout>
<status status="PASS" starttime="20200101 03:50:17.077" endtime="20200101 03:50:19.173" critical="yes"></status>
</test>
<doc>Simple example using SeleniumLibrary.</doc>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="8948"></status>
</suite>
<suite id="s1-s10" name="Robot Framework test run with user-created Python Library in parallel">
<suite id="s1-s10-s1" name="Docker-Example-Python-Library1-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library1-Enhanced-Version.robot">
<test id="s1-s10-s1-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a GET request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Get Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:33:56.162" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:33:56.027" endtime="20200103 09:33:56.162"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.163" endtime="20200103 09:33:56.164"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.165" endtime="20200103 09:33:56.166"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.166" endtime="20200103 09:33:56.167"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.167" endtime="20200103 09:33:56.169"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.169" endtime="20200103 09:33:56.170"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.170" endtime="20200103 09:33:56.172"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.172" endtime="20200103 09:33:56.173"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.173" endtime="20200103 09:33:56.174"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.174" endtime="20200103 09:33:56.175"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.175" endtime="20200103 09:33:56.176"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.176" endtime="20200103 09:33:56.177"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:33:56.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200103 09:33:56.178" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20200103 09:33:56.177" endtime="20200103 09:33:56.178"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200103 09:33:56.180" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20200103 09:33:56.185" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200103 09:33:56.796" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200103 09:33:56.180" endtime="20200103 09:33:56.796"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20200103 09:33:56.798" endtime="20200103 09:33:56.798"></status>
</kw>
<status status="PASS" starttime="20200103 09:33:56.179" endtime="20200103 09:33:56.799"></status>
</kw>
<status status="PASS" starttime="20200103 09:33:56.179" endtime="20200103 09:33:56.799"></status>
</kw>
<status status="PASS" starttime="20200103 09:33:56.179" endtime="20200103 09:33:56.799"></status>
</kw>
<status status="PASS" starttime="20200103 09:33:56.178" endtime="20200103 09:33:56.799"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20200103 09:33:56.025" endtime="20200103 09:33:56.800" critical="yes">200 == 200</status>
</test>
<test id="s1-s10-s1-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a PATCH request to &quot;title&quot; for jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Patch Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:33:57.093" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:33:56.807" endtime="20200103 09:33:57.094"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.094" endtime="20200103 09:33:57.096"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.096" endtime="20200103 09:33:57.097"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.098" endtime="20200103 09:33:57.099"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.099" endtime="20200103 09:33:57.100"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.100" endtime="20200103 09:33:57.102"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.102" endtime="20200103 09:33:57.103"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.103" endtime="20200103 09:33:57.104"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.105" endtime="20200103 09:33:57.106"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.106" endtime="20200103 09:33:57.107"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.107" endtime="20200103 09:33:57.108"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.108" endtime="20200103 09:33:57.109"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:33:57.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:33:57.109" endtime="20200103 09:33:57.110"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.110" endtime="20200103 09:33:57.110"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.111" endtime="20200103 09:33:57.111"></status>
</kw>
<status status="PASS" starttime="20200103 09:33:57.111" endtime="20200103 09:33:57.111"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:33:56.805" endtime="20200103 09:33:57.111" critical="yes"></status>
</test>
<test id="s1-s10-s1-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a POST request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Post Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:33:57.520" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20200103 09:33:57.114" endtime="20200103 09:33:57.520"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.520" endtime="20200103 09:33:57.522"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.523" endtime="20200103 09:33:57.524"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.525" endtime="20200103 09:33:57.526"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.526" endtime="20200103 09:33:57.527"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.527" endtime="20200103 09:33:57.528"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.528" endtime="20200103 09:33:57.529"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.529" endtime="20200103 09:33:57.530"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.530" endtime="20200103 09:33:57.532"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.532" endtime="20200103 09:33:57.533"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.533" endtime="20200103 09:33:57.534"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.534" endtime="20200103 09:33:57.535"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200103 09:33:57.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:33:57.535" endtime="20200103 09:33:57.536"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.536" endtime="20200103 09:33:57.536"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20200103 09:33:57.537" level="INFO">${POST_RESPONSE_VALUES} = [101]</msg>
<status status="PASS" starttime="20200103 09:33:57.536" endtime="20200103 09:33:57.537"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[101]</arg>
</arguments>
<msg timestamp="20200103 09:33:57.537" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:33:57.537" endtime="20200103 09:33:57.537"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.538" endtime="20200103 09:33:57.539"></status>
</kw>
<status status="PASS" starttime="20200103 09:33:57.538" endtime="20200103 09:33:57.539"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:33:57.113" endtime="20200103 09:33:57.539" critical="yes"></status>
</test>
<test id="s1-s10-s1-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a DELETE request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Delete Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:33:57.819" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:33:57.542" endtime="20200103 09:33:57.819"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.819" endtime="20200103 09:33:57.820"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.820" endtime="20200103 09:33:57.821"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.821" endtime="20200103 09:33:57.822"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.822" endtime="20200103 09:33:57.823"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.823" endtime="20200103 09:33:57.824"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.824" endtime="20200103 09:33:57.825"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.825" endtime="20200103 09:33:57.825"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:33:57.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:33:57.826" endtime="20200103 09:33:57.826"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20200103 09:33:57.826" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20200103 09:33:57.826" endtime="20200103 09:33:57.827"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.827" endtime="20200103 09:33:57.827"></status>
</kw>
<status status="PASS" starttime="20200103 09:33:57.827" endtime="20200103 09:33:57.827"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:33:57.541" endtime="20200103 09:33:57.828" critical="yes"></status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites".</doc>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1794"></status>
</suite>
<suite id="s1-s10-s2" name="Docker-Example-Python-Library2-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library2-Enhanced-Version.robot">
<test id="s1-s10-s2-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Put Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:33:56.514" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:33:56.027" endtime="20200103 09:33:56.514"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.514" endtime="20200103 09:33:56.516"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.517" endtime="20200103 09:33:56.518"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.518" endtime="20200103 09:33:56.519"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.519" endtime="20200103 09:33:56.521"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.522" endtime="20200103 09:33:56.523"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.523" endtime="20200103 09:33:56.524"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.524" endtime="20200103 09:33:56.525"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.525" endtime="20200103 09:33:56.526"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.526" endtime="20200103 09:33:56.527"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.527" endtime="20200103 09:33:56.528"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.528" endtime="20200103 09:33:56.529"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:33:56.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:33:56.529" endtime="20200103 09:33:56.530"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.530" endtime="20200103 09:33:56.530"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20200103 09:33:56.531" level="INFO">${POST_RESPONSE_VALUES} = [2]</msg>
<status status="PASS" starttime="20200103 09:33:56.531" endtime="20200103 09:33:56.531"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[2]</arg>
</arguments>
<msg timestamp="20200103 09:33:56.532" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:33:56.531" endtime="20200103 09:33:56.532"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.532" endtime="20200103 09:33:56.533"></status>
</kw>
<status status="PASS" starttime="20200103 09:33:56.532" endtime="20200103 09:33:56.533"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:33:56.026" endtime="20200103 09:33:56.533" critical="yes"></status>
</test>
<test id="s1-s10-s2-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PATCH request to &quot;body&quot; for jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Patch Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:33:56.823" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:33:56.537" endtime="20200103 09:33:56.823"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.823" endtime="20200103 09:33:56.824"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.824" endtime="20200103 09:33:56.825"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.825" endtime="20200103 09:33:56.826"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.826" endtime="20200103 09:33:56.827"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.827" endtime="20200103 09:33:56.828"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.828" endtime="20200103 09:33:56.828"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.828" endtime="20200103 09:33:56.829"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.830" endtime="20200103 09:33:56.831"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.831" endtime="20200103 09:33:56.831"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.832" endtime="20200103 09:33:56.832"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.832" endtime="20200103 09:33:56.833"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:33:56.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:33:56.833" endtime="20200103 09:33:56.833"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.833" endtime="20200103 09:33:56.834"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:56.834" endtime="20200103 09:33:56.835"></status>
</kw>
<status status="PASS" starttime="20200103 09:33:56.834" endtime="20200103 09:33:56.835"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:33:56.535" endtime="20200103 09:33:56.835" critical="yes"></status>
</test>
<test id="s1-s10-s2-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a GET request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Get Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:33:57.418" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:33:56.837" endtime="20200103 09:33:57.419"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.419" endtime="20200103 09:33:57.420"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.420" endtime="20200103 09:33:57.422"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.422" endtime="20200103 09:33:57.423"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.423" endtime="20200103 09:33:57.424"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.424" endtime="20200103 09:33:57.425"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.425" endtime="20200103 09:33:57.425"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.426" endtime="20200103 09:33:57.426"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.426" endtime="20200103 09:33:57.427"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.427" endtime="20200103 09:33:57.428"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.428" endtime="20200103 09:33:57.429"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.429" endtime="20200103 09:33:57.429"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:33:57.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:33:57.430" endtime="20200103 09:33:57.430"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>qui est esse</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.430" endtime="20200103 09:33:57.432"></status>
</kw>
<kw name="Dictionary Should Not Contain Value" library="Collections">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.433" endtime="20200103 09:33:57.433"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.434" endtime="20200103 09:33:57.434"></status>
</kw>
<status status="PASS" starttime="20200103 09:33:57.433" endtime="20200103 09:33:57.434"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:33:56.836" endtime="20200103 09:33:57.434" critical="yes"></status>
</test>
<test id="s1-s10-s2-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a DELETE request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Delete Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:33:57.749" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:33:57.436" endtime="20200103 09:33:57.750"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.751" endtime="20200103 09:33:57.752"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.752" endtime="20200103 09:33:57.753"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.753" endtime="20200103 09:33:57.755"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.755" endtime="20200103 09:33:57.757"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.757" endtime="20200103 09:33:57.758"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.758" endtime="20200103 09:33:57.759"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:33:57.759" endtime="20200103 09:33:57.760"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:33:57.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200103 09:33:57.761" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20200103 09:33:57.760" endtime="20200103 09:33:57.761"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200103 09:33:57.764" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20200103 09:33:57.768" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200103 09:33:58.385" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200103 09:33:57.763" endtime="20200103 09:33:58.385"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20200103 09:33:58.386" endtime="20200103 09:33:58.387"></status>
</kw>
<status status="PASS" starttime="20200103 09:33:57.762" endtime="20200103 09:33:58.388"></status>
</kw>
<status status="PASS" starttime="20200103 09:33:57.762" endtime="20200103 09:33:58.388"></status>
</kw>
<status status="PASS" starttime="20200103 09:33:57.762" endtime="20200103 09:33:58.388"></status>
</kw>
<status status="PASS" starttime="20200103 09:33:57.761" endtime="20200103 09:33:58.389"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20200103 09:33:57.435" endtime="20200103 09:33:58.389" critical="yes">200 == 200</status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites" option.</doc>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2359"></status>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 2 executions.</doc>
<metadata>
<item name="Randomized">Suites and tests (seed 9021879627265916215)</item>
</metadata>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="4153"></status>
</suite>
<suite id="s1-s11" name="Robot Framework test run with user-created Python Library one test at a time in serial random order">
<suite id="s1-s11-s1" name="Docker-Example-Python-Library1-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library1-Enhanced-Version.robot">
<test id="s1-s11-s1-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a DELETE request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Delete Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:34:08.010" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:34:07.509" endtime="20200103 09:34:08.010"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.010" endtime="20200103 09:34:08.011"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.011" endtime="20200103 09:34:08.012"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.012" endtime="20200103 09:34:08.013"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.013" endtime="20200103 09:34:08.013"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.014" endtime="20200103 09:34:08.014"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.014" endtime="20200103 09:34:08.015"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.015" endtime="20200103 09:34:08.016"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:34:08.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.017" endtime="20200103 09:34:08.017"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20200103 09:34:08.018" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20200103 09:34:08.018" endtime="20200103 09:34:08.018"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.019" endtime="20200103 09:34:08.019"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:08.018" endtime="20200103 09:34:08.019"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:34:07.507" endtime="20200103 09:34:08.020" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test id="s1-s11-s1-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a POST request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Post Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:34:06.294" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20200103 09:34:05.919" endtime="20200103 09:34:06.294"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.295" endtime="20200103 09:34:06.295"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.296" endtime="20200103 09:34:06.296"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.296" endtime="20200103 09:34:06.297"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.297" endtime="20200103 09:34:06.299"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.299" endtime="20200103 09:34:06.300"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.300" endtime="20200103 09:34:06.300"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.301" endtime="20200103 09:34:06.301"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.301" endtime="20200103 09:34:06.302"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.302" endtime="20200103 09:34:06.303"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.303" endtime="20200103 09:34:06.303"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.304" endtime="20200103 09:34:06.304"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200103 09:34:06.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:34:06.304" endtime="20200103 09:34:06.305"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.305" endtime="20200103 09:34:06.306"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20200103 09:34:06.306" level="INFO">${POST_RESPONSE_VALUES} = [101]</msg>
<status status="PASS" starttime="20200103 09:34:06.306" endtime="20200103 09:34:06.306"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[101]</arg>
</arguments>
<msg timestamp="20200103 09:34:06.307" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:34:06.307" endtime="20200103 09:34:06.307"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.308" endtime="20200103 09:34:06.308"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:06.308" endtime="20200103 09:34:06.309"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:34:05.918" endtime="20200103 09:34:06.309" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test id="s1-s11-s1-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a PATCH request to &quot;title&quot; for jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Patch Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:34:06.628" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:34:06.312" endtime="20200103 09:34:06.628"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.628" endtime="20200103 09:34:06.629"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.629" endtime="20200103 09:34:06.629"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.629" endtime="20200103 09:34:06.630"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.630" endtime="20200103 09:34:06.631"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.631" endtime="20200103 09:34:06.632"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.633" endtime="20200103 09:34:06.633"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.633" endtime="20200103 09:34:06.634"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.635" endtime="20200103 09:34:06.635"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.635" endtime="20200103 09:34:06.636"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.636" endtime="20200103 09:34:06.636"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.637" endtime="20200103 09:34:06.637"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:34:06.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:34:06.637" endtime="20200103 09:34:06.638"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.638" endtime="20200103 09:34:06.638"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.639" endtime="20200103 09:34:06.639"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:06.639" endtime="20200103 09:34:06.639"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:34:06.310" endtime="20200103 09:34:06.639" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test id="s1-s11-s1-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a GET request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Get Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:34:06.764" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:34:06.641" endtime="20200103 09:34:06.764"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.765" endtime="20200103 09:34:06.765"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.766" endtime="20200103 09:34:06.767"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.767" endtime="20200103 09:34:06.768"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.768" endtime="20200103 09:34:06.769"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.769" endtime="20200103 09:34:06.769"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.770" endtime="20200103 09:34:06.770"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.770" endtime="20200103 09:34:06.771"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.771" endtime="20200103 09:34:06.772"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.772" endtime="20200103 09:34:06.773"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.773" endtime="20200103 09:34:06.773"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.773" endtime="20200103 09:34:06.774"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:34:06.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200103 09:34:06.776" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20200103 09:34:06.774" endtime="20200103 09:34:06.776"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200103 09:34:06.779" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20200103 09:34:06.784" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200103 09:34:07.500" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200103 09:34:06.778" endtime="20200103 09:34:07.500"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20200103 09:34:07.502" endtime="20200103 09:34:07.503"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:06.778" endtime="20200103 09:34:07.505"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:06.778" endtime="20200103 09:34:07.505"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:06.777" endtime="20200103 09:34:07.505"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:06.777" endtime="20200103 09:34:07.505"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20200103 09:34:06.640" endtime="20200103 09:34:07.506" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="fail"&gt;FAIL&lt;/span&gt;&lt;br&gt;New message: 200 == 200&lt;hr&gt;Old status: &lt;span class="fail"&gt;FAIL&lt;/span&gt;&lt;br&gt;Old message: 200 == 200</status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites".</doc>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2099"></status>
</suite>
<suite id="s1-s11-s2" name="Docker-Example-Python-Library2-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library2-Enhanced-Version.robot">
<test id="s1-s11-s2-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a GET request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Get Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:34:08.796" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.667" endtime="20200103 09:34:08.797"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.797" endtime="20200103 09:34:08.798"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.798" endtime="20200103 09:34:08.799"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.800" endtime="20200103 09:34:08.801"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.801" endtime="20200103 09:34:08.802"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.802" endtime="20200103 09:34:08.803"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.803" endtime="20200103 09:34:08.803"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.804" endtime="20200103 09:34:08.804"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.804" endtime="20200103 09:34:08.805"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.805" endtime="20200103 09:34:08.806"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.806" endtime="20200103 09:34:08.806"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.807" endtime="20200103 09:34:08.807"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:34:08.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.807" endtime="20200103 09:34:08.808"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>qui est esse</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.808" endtime="20200103 09:34:08.809"></status>
</kw>
<kw name="Dictionary Should Not Contain Value" library="Collections">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.809" endtime="20200103 09:34:08.809"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.810" endtime="20200103 09:34:08.810"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:08.810" endtime="20200103 09:34:08.810"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:34:08.665" endtime="20200103 09:34:08.811" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test id="s1-s11-s2-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a DELETE request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Delete Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:34:09.119" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.812" endtime="20200103 09:34:09.119"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:09.120" endtime="20200103 09:34:09.120"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:09.121" endtime="20200103 09:34:09.121"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:09.121" endtime="20200103 09:34:09.122"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:09.122" endtime="20200103 09:34:09.123"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:09.123" endtime="20200103 09:34:09.124"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:09.124" endtime="20200103 09:34:09.125"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:09.125" endtime="20200103 09:34:09.126"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:34:09.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200103 09:34:09.127" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20200103 09:34:09.126" endtime="20200103 09:34:09.127"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200103 09:34:09.130" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20200103 09:34:09.136" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200103 09:34:09.859" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200103 09:34:09.129" endtime="20200103 09:34:09.859"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20200103 09:34:09.861" endtime="20200103 09:34:09.862"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:09.129" endtime="20200103 09:34:09.862"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:09.128" endtime="20200103 09:34:09.863"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:09.128" endtime="20200103 09:34:09.863"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:09.128" endtime="20200103 09:34:09.863"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20200103 09:34:08.811" endtime="20200103 09:34:09.863" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="fail"&gt;FAIL&lt;/span&gt;&lt;br&gt;New message: 200 == 200&lt;hr&gt;Old status: &lt;span class="fail"&gt;FAIL&lt;/span&gt;&lt;br&gt;Old message: 200 == 200</status>
</test>
<test id="s1-s11-s2-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Put Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:34:08.398" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.047" endtime="20200103 09:34:08.398"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.399" endtime="20200103 09:34:08.400"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.401" endtime="20200103 09:34:08.401"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.402" endtime="20200103 09:34:08.402"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.402" endtime="20200103 09:34:08.403"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.403" endtime="20200103 09:34:08.404"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.404" endtime="20200103 09:34:08.404"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.405" endtime="20200103 09:34:08.405"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.405" endtime="20200103 09:34:08.406"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.407" endtime="20200103 09:34:08.407"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.407" endtime="20200103 09:34:08.408"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.408" endtime="20200103 09:34:08.409"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:34:08.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.410" endtime="20200103 09:34:08.410"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.410" endtime="20200103 09:34:08.411"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20200103 09:34:08.412" level="INFO">${POST_RESPONSE_VALUES} = [2]</msg>
<status status="PASS" starttime="20200103 09:34:08.411" endtime="20200103 09:34:08.412"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[2]</arg>
</arguments>
<msg timestamp="20200103 09:34:08.412" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.412" endtime="20200103 09:34:08.412"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.413" endtime="20200103 09:34:08.413"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:08.413" endtime="20200103 09:34:08.413"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:34:08.046" endtime="20200103 09:34:08.414" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<test id="s1-s11-s2-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PATCH request to &quot;body&quot; for jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Patch Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:34:08.652" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.416" endtime="20200103 09:34:08.653"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.653" endtime="20200103 09:34:08.654"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.654" endtime="20200103 09:34:08.655"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.655" endtime="20200103 09:34:08.655"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.656" endtime="20200103 09:34:08.656"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.657" endtime="20200103 09:34:08.657"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.657" endtime="20200103 09:34:08.658"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.658" endtime="20200103 09:34:08.659"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.659" endtime="20200103 09:34:08.660"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.660" endtime="20200103 09:34:08.661"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.661" endtime="20200103 09:34:08.661"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.661" endtime="20200103 09:34:08.662"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:34:08.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.662" endtime="20200103 09:34:08.663"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.663" endtime="20200103 09:34:08.664"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.664" endtime="20200103 09:34:08.665"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:08.664" endtime="20200103 09:34:08.665"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:34:08.414" endtime="20200103 09:34:08.665" critical="yes">*HTML* Re-executed test has been merged.&lt;hr&gt;New status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;New message: &lt;hr&gt;Old status: &lt;span class="pass"&gt;PASS&lt;/span&gt;&lt;br&gt;Old message: </status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites" option.</doc>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1817"></status>
</suite>
<metadata>
<item name="Randomized">Suites and tests (seed 3457487501987413438)</item>
</metadata>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="3916"></status>
</suite>
<suite id="s1-s12" name="Robot Framework test run with user-created Python Library one test at a time in serial random order">
<suite id="s1-s12-s1" name="Docker-Example-Python-Library1-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library1-Enhanced-Version.robot">
<test id="s1-s12-s1-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a POST request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Post Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:34:06.294" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20200103 09:34:05.919" endtime="20200103 09:34:06.294"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.295" endtime="20200103 09:34:06.295"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.296" endtime="20200103 09:34:06.296"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.296" endtime="20200103 09:34:06.297"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.297" endtime="20200103 09:34:06.299"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.299" endtime="20200103 09:34:06.300"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.300" endtime="20200103 09:34:06.300"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.301" endtime="20200103 09:34:06.301"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.301" endtime="20200103 09:34:06.302"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.302" endtime="20200103 09:34:06.303"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.303" endtime="20200103 09:34:06.303"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.304" endtime="20200103 09:34:06.304"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200103 09:34:06.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:34:06.304" endtime="20200103 09:34:06.305"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.305" endtime="20200103 09:34:06.306"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20200103 09:34:06.306" level="INFO">${POST_RESPONSE_VALUES} = [101]</msg>
<status status="PASS" starttime="20200103 09:34:06.306" endtime="20200103 09:34:06.306"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[101]</arg>
</arguments>
<msg timestamp="20200103 09:34:06.307" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:34:06.307" endtime="20200103 09:34:06.307"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.308" endtime="20200103 09:34:06.308"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:06.308" endtime="20200103 09:34:06.309"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:34:05.918" endtime="20200103 09:34:06.309" critical="yes"></status>
</test>
<test id="s1-s12-s1-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a PATCH request to &quot;title&quot; for jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Patch Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:34:06.628" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:34:06.312" endtime="20200103 09:34:06.628"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.628" endtime="20200103 09:34:06.629"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.629" endtime="20200103 09:34:06.629"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.629" endtime="20200103 09:34:06.630"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.630" endtime="20200103 09:34:06.631"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.631" endtime="20200103 09:34:06.632"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.633" endtime="20200103 09:34:06.633"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.633" endtime="20200103 09:34:06.634"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.635" endtime="20200103 09:34:06.635"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.635" endtime="20200103 09:34:06.636"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.636" endtime="20200103 09:34:06.636"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.637" endtime="20200103 09:34:06.637"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:34:06.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:34:06.637" endtime="20200103 09:34:06.638"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.638" endtime="20200103 09:34:06.638"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.639" endtime="20200103 09:34:06.639"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:06.639" endtime="20200103 09:34:06.639"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:34:06.310" endtime="20200103 09:34:06.639" critical="yes"></status>
</test>
<test id="s1-s12-s1-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a GET request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Get Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:34:06.764" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:34:06.641" endtime="20200103 09:34:06.764"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.765" endtime="20200103 09:34:06.765"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.766" endtime="20200103 09:34:06.767"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.767" endtime="20200103 09:34:06.768"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.768" endtime="20200103 09:34:06.769"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.769" endtime="20200103 09:34:06.769"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.770" endtime="20200103 09:34:06.770"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.770" endtime="20200103 09:34:06.771"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.771" endtime="20200103 09:34:06.772"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.772" endtime="20200103 09:34:06.773"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.773" endtime="20200103 09:34:06.773"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:06.773" endtime="20200103 09:34:06.774"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:34:06.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200103 09:34:06.776" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20200103 09:34:06.774" endtime="20200103 09:34:06.776"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200103 09:34:06.779" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library1-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20200103 09:34:06.784" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200103 09:34:07.500" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200103 09:34:06.778" endtime="20200103 09:34:07.500"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20200103 09:34:07.502" endtime="20200103 09:34:07.503"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:06.778" endtime="20200103 09:34:07.505"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:06.778" endtime="20200103 09:34:07.505"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:06.777" endtime="20200103 09:34:07.505"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:06.777" endtime="20200103 09:34:07.505"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20200103 09:34:06.640" endtime="20200103 09:34:07.506" critical="yes">200 == 200</status>
</test>
<test id="s1-s12-s1-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE ONE : Send a DELETE request to jsonplaceholder.typicode.com/posts/1 and check the response.">
<kw name="Send Delete Request Robot File One" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:34:08.010" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:34:07.509" endtime="20200103 09:34:08.010"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.010" endtime="20200103 09:34:08.011"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.011" endtime="20200103 09:34:08.012"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.012" endtime="20200103 09:34:08.013"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.013" endtime="20200103 09:34:08.013"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.014" endtime="20200103 09:34:08.014"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.014" endtime="20200103 09:34:08.015"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.015" endtime="20200103 09:34:08.016"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:34:08.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.017" endtime="20200103 09:34:08.017"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_ONE_DELETE_RESPONSE.json()}</arg>
</arguments>
<msg timestamp="20200103 09:34:08.018" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20200103 09:34:08.018" endtime="20200103 09:34:08.018"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.019" endtime="20200103 09:34:08.019"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:08.018" endtime="20200103 09:34:08.019"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:34:07.507" endtime="20200103 09:34:08.020" critical="yes"></status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites".</doc>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2099"></status>
</suite>
<suite id="s1-s12-s2" name="Docker-Example-Python-Library2-Enhanced-Version" source="/rfw/Tests/Workshop-Part-Two/Docker-Example-Python-Library2-Enhanced-Version.robot">
<test id="s1-s12-s2-t1" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PUT request to jsonplaceholder.typicode.com/posts and check the response.">
<kw name="Send Put Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:34:08.398" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.047" endtime="20200103 09:34:08.398"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.399" endtime="20200103 09:34:08.400"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.401" endtime="20200103 09:34:08.401"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.402" endtime="20200103 09:34:08.402"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.402" endtime="20200103 09:34:08.403"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.403" endtime="20200103 09:34:08.404"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.404" endtime="20200103 09:34:08.404"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.405" endtime="20200103 09:34:08.405"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.405" endtime="20200103 09:34:08.406"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.407" endtime="20200103 09:34:08.407"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.407" endtime="20200103 09:34:08.408"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.408" endtime="20200103 09:34:08.409"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:34:08.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.410" endtime="20200103 09:34:08.410"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
<arg>id</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.410" endtime="20200103 09:34:08.411"></status>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_POST_RESPONSE.json()}</arg>
</arguments>
<assign>
<var>${POST_RESPONSE_VALUES}</var>
</assign>
<msg timestamp="20200103 09:34:08.412" level="INFO">${POST_RESPONSE_VALUES} = [2]</msg>
<status status="PASS" starttime="20200103 09:34:08.411" endtime="20200103 09:34:08.412"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${POST_RESPONSE_VALUES}</arg>
<arg>[2]</arg>
</arguments>
<msg timestamp="20200103 09:34:08.412" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.412" endtime="20200103 09:34:08.412"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.413" endtime="20200103 09:34:08.413"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:08.413" endtime="20200103 09:34:08.413"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:34:08.046" endtime="20200103 09:34:08.414" critical="yes"></status>
</test>
<test id="s1-s12-s2-t2" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a PATCH request to &quot;body&quot; for jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Patch Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:34:08.652" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.416" endtime="20200103 09:34:08.653"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.653" endtime="20200103 09:34:08.654"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.654" endtime="20200103 09:34:08.655"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.655" endtime="20200103 09:34:08.655"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.656" endtime="20200103 09:34:08.656"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.657" endtime="20200103 09:34:08.657"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.657" endtime="20200103 09:34:08.658"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.658" endtime="20200103 09:34:08.659"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.659" endtime="20200103 09:34:08.660"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.660" endtime="20200103 09:34:08.661"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.661" endtime="20200103 09:34:08.661"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.661" endtime="20200103 09:34:08.662"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:34:08.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.662" endtime="20200103 09:34:08.663"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_PATCH_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.663" endtime="20200103 09:34:08.664"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.664" endtime="20200103 09:34:08.665"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:08.664" endtime="20200103 09:34:08.665"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:34:08.414" endtime="20200103 09:34:08.665" critical="yes"></status>
</test>
<test id="s1-s12-s2-t3" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a GET request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Get Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:34:08.796" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.667" endtime="20200103 09:34:08.797"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.797" endtime="20200103 09:34:08.798"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.798" endtime="20200103 09:34:08.799"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.800" endtime="20200103 09:34:08.801"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.801" endtime="20200103 09:34:08.802"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.802" endtime="20200103 09:34:08.803"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.803" endtime="20200103 09:34:08.803"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.804" endtime="20200103 09:34:08.804"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.804" endtime="20200103 09:34:08.805"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.805" endtime="20200103 09:34:08.806"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.806" endtime="20200103 09:34:08.806"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.807" endtime="20200103 09:34:08.807"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:34:08.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.807" endtime="20200103 09:34:08.808"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>qui est esse</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.808" endtime="20200103 09:34:08.809"></status>
</kw>
<kw name="Dictionary Should Not Contain Value" library="Collections">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_GET_RESPONSE.json()}</arg>
<arg>Testing with Robot Framework.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.809" endtime="20200103 09:34:08.809"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:08.810" endtime="20200103 09:34:08.810"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:08.810" endtime="20200103 09:34:08.810"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="PASS" starttime="20200103 09:34:08.665" endtime="20200103 09:34:08.811" critical="yes"></status>
</test>
<test id="s1-s12-s2-t4" name="USER-CREATED PYTHON LIBRARY EXAMPLE PART TWO - ROBOT FILE TWO : Send a DELETE request to jsonplaceholder.typicode.com/posts/2 and check the response.">
<kw name="Send Delete Request Robot File Two" library="DockerExample">
<assign>
<var>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</var>
</assign>
<msg timestamp="20200103 09:34:09.119" level="INFO">${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200103 09:34:08.812" endtime="20200103 09:34:09.119"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:09.120" endtime="20200103 09:34:09.120"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:09.121" endtime="20200103 09:34:09.121"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:09.121" endtime="20200103 09:34:09.122"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE}</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:09.122" endtime="20200103 09:34:09.123"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:09.123" endtime="20200103 09:34:09.124"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:09.124" endtime="20200103 09:34:09.125"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" starttime="20200103 09:34:09.125" endtime="20200103 09:34:09.126"></status>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are equal after converting them to strings.</doc>
<arguments>
<arg>${PYTHON_LIBRARY_ROBOT_FILE_TWO_DELETE_RESPONSE.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200103 09:34:09.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200103 09:34:09.127" level="FAIL">200 == 200</msg>
<status status="FAIL" starttime="20200103 09:34:09.126" endtime="20200103 09:34:09.127"></status>
</kw>
<kw name="Trigger Only After Failure" type="teardown">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Failure Detected Notify Team</arg>
</arguments>
<kw name="Failure Detected Notify Team">
<kw name="Send Short Message Through Slack And Email" library="SharedKeywordsAndListeners">
<arguments>
<arg>regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file</arg>
<arg>${TEST_ENVIRONMENT}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "The ${TEST_NAME} failed in the ${TEST_ENVIRONMENT} environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</arg>
<arg>shell=True</arg>
<arg>timeout=20s</arg>
<arg>on_timeout=continue</arg>
</arguments>
<msg timestamp="20200103 09:34:09.130" level="INFO">Starting process:
echo "The regression tests in the Docker-Example-Python-Library2-Enhanced-Version.robot file failed in the your_test_environment environment." | slacktee.sh -i :nerd_face: --plain-text --config /rfw/Shared-Resources/.slacktee</msg>
<msg timestamp="20200103 09:34:09.136" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200103 09:34:09.859" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20200103 09:34:09.129" endtime="20200103 09:34:09.859"></status>
</kw>
<kw name="Send Email Notification" library="TestFailureEmailNotification">
<doc>When a test fails you can send an email. Here are some examples that could work...</doc>
<status status="PASS" starttime="20200103 09:34:09.861" endtime="20200103 09:34:09.862"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:09.129" endtime="20200103 09:34:09.862"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:09.128" endtime="20200103 09:34:09.863"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:09.128" endtime="20200103 09:34:09.863"></status>
</kw>
<status status="PASS" starttime="20200103 09:34:09.128" endtime="20200103 09:34:09.863"></status>
</kw>
<tags>
<tag>Regression_Tests</tag>
<tag>Slightly_Refined_And_Room_For_Enhancements</tag>
</tags>
<status status="FAIL" starttime="20200103 09:34:08.811" endtime="20200103 09:34:09.863" critical="yes">200 == 200</status>
</test>
<doc>Part Two of the Python Library example has been enhanced by using the SharedKeywordsAndListeners.robot resource file to add 2 types of Robot Framework listeners and a team notification keyword.
Also added the "--randomize all" option in the commands-running-inside-a-docker-container.sh script, and will demonstrate the use of the "--rerunfailedsuites" option.</doc>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="1817"></status>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="3916"></status>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="86998"></status>
</suite>
<statistics>
<total>
<stat pass="35" fail="9">Critical Tests</stat>
<stat pass="35" fail="9">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0">Check_One</stat>
<stat pass="2" fail="0">Check_Three</stat>
<stat pass="2" fail="0">Check_Two</stat>
<stat pass="0" fail="2">Desktop Chrome</stat>
<stat pass="4" fail="0">Desktop Firefox</stat>
<stat pass="1" fail="1">Desktop Safari</stat>
<stat pass="2" fail="0">Group_One</stat>
<stat pass="2" fail="0">Group_Three</stat>
<stat pass="2" fail="0">Group_Two</stat>
<stat pass="18" fail="6">Regression_Tests</stat>
<stat pass="18" fail="6">Slightly_Refined_And_Room_For_Enhancements</stat>
</tag>
<suite>
<stat pass="35" fail="9" id="s1" name="Leon Robot Framework Assistant Combined Results Dashboard">Leon Robot Framework Assistant Combined Results Dashboard</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
